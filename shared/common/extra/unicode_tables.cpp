#include "unicode_tables.h"
#include "base/algorithm.h"

namespace iso { namespace unicode {

// 1295	groups, 2620 pairs, 343	ranges
const CaseFold unicode_casefold[] =	{
	{65, 90, 32},				{97, 106, -32},					{107, 107, 8383},				{108, 114, -32},				{115, 115, 268},			{116, 122, -32},				{181, 181, 743},				{192, 214, 32},
	{216, 222, 32},				{223, 223, 7615},				{224, 228, -32},				{229, 229, 8262},				{230, 246, -32},			{248, 254, -32},				{255, 255, 121},				{256, 303, EvenOdd},
	{306, 311, EvenOdd},		{313, 328, OddEven},			{330, 375, EvenOdd},			{376, 376, -121},				{377, 382, OddEven},		{383, 383, -300},				{384, 384, 195},				{385, 385, 210},
	{386, 389, EvenOdd},		{390, 390, 206},				{391, 392, OddEven},			{393, 394, 205},				{395, 396, OddEven},		{398, 398, 79},					{399, 399, 202},				{400, 400, 203},
	{401, 402, OddEven},		{403, 403, 205},				{404, 404, 207},				{405, 405, 97},					{406, 406, 211},			{407, 407, 209},				{408, 409, EvenOdd},			{410, 410, 163},
	{412, 412, 211},			{413, 413, 213},				{414, 414, 130},				{415, 415, 214},				{416, 421, EvenOdd},		{422, 422, 218},				{423, 424, OddEven},			{425, 425, 218},
	{428, 429, EvenOdd},		{430, 430, 218},				{431, 432, OddEven},			{433, 434, 217},				{435, 438, OddEven},		{439, 439, 219},				{440, 441, EvenOdd},			{444, 445, EvenOdd},
	{447, 447, 56},				{452, 452, EvenOdd},			{453, 453, OddEven},			{454, 454, -2},					{455, 455, OddEven},		{456, 456, EvenOdd},			{457, 457, -2},					{458, 458, EvenOdd},
	{459, 459, OddEven},		{460, 460, -2},					{461, 476, OddEven},			{477, 477, -79},				{478, 495, EvenOdd},		{497, 497, OddEven},			{498, 498, EvenOdd},			{499, 499, -2},
	{500, 501, EvenOdd},		{502, 502, -97},				{503, 503, -56},				{504, 543, EvenOdd},			{544, 544, -130},			{546, 563, EvenOdd},			{570, 570, 10795},				{571, 572, OddEven},
	{573, 573, -163},			{574, 574, 10792},				{575, 576, 10815},				{577, 578, OddEven},			{579, 579, -195},			{580, 580, 69},					{581, 581, 71},					{582, 591, EvenOdd},
	{592, 592, 10783},			{593, 593, 10780},				{594, 594, 10782},				{595, 595, -210},				{596, 596, -206},			{598, 599, -205},				{601, 601, -202},				{603, 603, -203},
	{604, 604, 42319},			{608, 608, -205},				{609, 609, 42315},				{611, 611, -207},				{613, 613, 42280},			{614, 614, 42308},				{616, 616, -209},				{617, 617, -211},
	{618, 618, 42308},			{619, 619, 10743},				{620, 620, 42305},				{623, 623, -211},				{625, 625, 10749},			{626, 626, -213},				{629, 629, -214},				{637, 637, 10727},
	{640, 640, -218},			{643, 643, -218},				{647, 647, 42282},				{648, 648, -218},				{649, 649, -69},			{650, 651, -217},				{652, 652, -71},				{658, 658, -219},
	{669, 669, 42261},			{670, 670, 42258},				{837, 837, 84},					{880, 883, EvenOdd},			{886, 887, EvenOdd},		{891, 893, 130},				{895, 895, 116},				{902, 902, 38},
	{904, 906, 37},				{908, 908, 64},					{910, 911, 63},					{913, 929, 32},					{931, 931, 31},				{932, 939, 32},					{940, 940, -38},				{941, 943, -37},
	{945, 945, -32},			{946, 946, 30},					{947, 948, -32},				{949, 949, 64},					{950, 951, -32},			{952, 952, 25},					{953, 953, 7173},				{954, 954, 54},
	{955, 955, -32},			{956, 956, -775},				{957, 959, -32},				{960, 960, 22},					{961, 961, 48},				{962, 962, EvenOdd},			{963, 965, -32},				{966, 966, 15},
	{967, 968, -32},			{969, 969, 7517},				{970, 971, -32},				{972, 972, -64},				{973, 974, -63},			{975, 975, 8},					{976, 976, -62},				{977, 977, 35},
	{981, 981, -47},			{982, 982, -54},				{983, 983, -8},					{984, 1007,	EvenOdd},			{1008, 1008, -86},			{1009, 1009, -80},				{1010, 1010, 7},				{1011, 1011, -116},
	{1012, 1012, -92},			{1013, 1013, -96},				{1015, 1016, OddEven},			{1017, 1017, -7},				{1018, 1019, EvenOdd},		{1021, 1023, -130},				{1024, 1039, 80},				{1040, 1071, 32},
	{1072, 1073, -32},			{1074, 1074, 6222},				{1075, 1075, -32},				{1076, 1076, 6221},				{1077, 1085, -32},			{1086, 1086, 6212},				{1087, 1088, -32},				{1089, 1090, 6210},
	{1091, 1097, -32},			{1098, 1098, 6204},				{1099, 1103, -32},				{1104, 1119, -80},				{1120, 1122, EvenOdd},		{1123, 1123, 6180},				{1124, 1153, EvenOdd},			{1162, 1215, EvenOdd},
	{1216, 1216, 15},			{1217, 1230, OddEven},			{1231, 1231, -15},				{1232, 1327, EvenOdd},			{1329, 1366, 48},			{1377, 1414, -48},				{4256, 4293, 7264},				{4295, 4295, 7264},
	{4301, 4301, 7264},			{5024, 5103, 38864},			{5104, 5109, 8},				{5112, 5117, -8},				{7296, 7296, -6254},		{7297, 7297, -6253},			{7298, 7298, -6244},			{7299, 7299, -6242},
	{7300, 7300, EvenOdd},		{7301, 7301, -6243},			{7302, 7302, -6236},			{7303, 7303, -6181},			{7304, 7304, 35266},		{7545, 7545, 35332},			{7549, 7549, 3814},				{7680, 7776, EvenOdd},
	{7777, 7777, 58},			{7778, 7829, EvenOdd},			{7835, 7835, -59},				{7838, 7838, -7615},			{7840, 7935, EvenOdd},		{7936, 7943, 8},				{7944, 7951, -8},				{7952, 7957, 8},
	{7960, 7965, -8},			{7968, 7975, 8},				{7976, 7983, -8},				{7984, 7991, 8},				{7992, 7999, -8},			{8000, 8005, 8},				{8008, 8013, -8},				{8017, 8017, 8},
	{8019, 8019, 8},			{8021, 8021, 8},				{8023, 8023, 8},				{8025, 8025, -8},				{8027, 8027, -8},			{8029, 8029, -8},				{8031, 8031, -8},				{8032, 8039, 8},
	{8040, 8047, -8},			{8048, 8049, 74},				{8050, 8053, 86},				{8054, 8055, 100},				{8056, 8057, 128},			{8058, 8059, 112},				{8060, 8061, 126},				{8064, 8071, 8},
	{8072, 8079, -8},			{8080, 8087, 8},				{8088, 8095, -8},				{8096, 8103, 8},				{8104, 8111, -8},			{8112, 8113, 8},				{8115, 8115, 9},				{8120, 8121, -8},
	{8122, 8123, -74},			{8124, 8124, -9},				{8126, 8126, -7289},			{8131, 8131, 9},				{8136, 8139, -86},			{8140, 8140, -9},				{8144, 8145, 8},				{8152, 8153, -8},
	{8154, 8155, -100},			{8160, 8161, 8},				{8165, 8165, 7},				{8168, 8169, -8},				{8170, 8171, -112},			{8172, 8172, -7},				{8179, 8179, 9},				{8184, 8185, -128},
	{8186, 8187, -126},			{8188, 8188, -9},				{8486, 8486, -7549},			{8490, 8490, -8415},			{8491, 8491, -8294},		{8498, 8498, 28},				{8526, 8526, -28},				{8544, 8559, 16},
	{8560, 8575, -16},			{8579, 8580, OddEven},			{9398, 9423, 26},				{9424, 9449, -26},				{11264, 11310, 48},			{11312, 11358, -48},			{11360, 11361, EvenOdd},		{11362, 11362, -10743},
	{11363, 11363, -3814},		{11364, 11364, -10727},			{11365, 11365, -10795},			{11366, 11366, -10792},			{11367, 11372, OddEven},	{11373, 11373, -10780},			{11374, 11374, -10749},			{11375, 11375, -10783},
	{11376, 11376, -10782},		{11378, 11379, EvenOdd},		{11381, 11382, OddEven},		{11390, 11391, -10815},			{11392, 11491, EvenOdd},	{11499, 11502, OddEven},		{11506, 11507, EvenOdd},		{11520, 11557, -7264},
	{11559, 11559, -7264},		{11565, 11565, -7264},			{42560, 42570, EvenOdd},		{42571, 42571, -35267},			{42572, 42605, EvenOdd},	{42624, 42651, EvenOdd},		{42786, 42799, EvenOdd},		{42802, 42863, EvenOdd},
	{42873, 42876, OddEven},	{42877, 42877, -35332},			{42878, 42887, EvenOdd},		{42891, 42892, OddEven},		{42893, 42893, -42280},		{42896, 42899, EvenOdd},		{42902, 42921, EvenOdd},		{42922, 42922, -42308},
	{42923, 42923, -42319},		{42924, 42924, -42315},			{42925, 42925, -42305},			{42926, 42926, -42308},			{42928, 42928, -42258},		{42929, 42929, -42282},			{42930, 42930, -42261},			{42931, 42931, 928},
	{42932, 42935, EvenOdd},	{43859, 43859, -928},			{43888, 43967, -38864},			{65313, 65338, 32},				{65345, 65370, -32},		{66560, 66599, 40},				{66600, 66639, -40},			{66736, 66771, 40},
	{66776, 66811, -40},		{68736, 68786, 64},				{68800, 68850, -64},			{71840, 71871, 32},				{71872, 71903, -32},		{125184, 125217, 34},			{125218, 125251, -34},
};

// 1295	groups, 1325 pairs, 191	ranges
const CaseFold unicode_tolower[] = {
	{65, 90, 32},				{181, 181, 775},				{192, 214, 32},					{216, 222, 32},					{256, 302, EvenOddSkip},	{306, 310, EvenOddSkip},		{313, 327, OddEvenSkip},		{330, 374, EvenOddSkip},
	{376, 376, -121},			{377, 381, OddEvenSkip},		{383, 383, -268},				{385, 385, 210},				{386, 388, EvenOddSkip},	{390, 390, 206},				{391, 391, OddEven},			{393, 394, 205},
	{395, 395, OddEven},		{398, 398, 79},					{399, 399, 202},				{400, 400, 203},				{401, 401, OddEven},		{403, 403, 205},				{404, 404, 207},				{406, 406, 211},
	{407, 407, 209},			{408, 408, EvenOdd},			{412, 412, 211},				{413, 413, 213},				{415, 415, 214},			{416, 420, EvenOddSkip},		{422, 422, 218},				{423, 423, OddEven},
	{425, 425, 218},			{428, 428, EvenOdd},			{430, 430, 218},				{431, 431, OddEven},			{433, 434, 217},			{435, 437, OddEvenSkip},		{439, 439, 219},				{440, 440, EvenOdd},
	{444, 444, EvenOdd},		{452, 452, 2},					{453, 453, OddEven},			{455, 455, 2},					{456, 456, EvenOdd},		{458, 458, 2},					{459, 475, OddEvenSkip},		{478, 494, EvenOddSkip},
	{497, 497, 2},				{498, 500, EvenOddSkip},		{502, 502, -97},				{503, 503, -56},				{504, 542, EvenOddSkip},	{544, 544, -130},				{546, 562, EvenOddSkip},		{570, 570, 10795},
	{571, 571, OddEven},		{573, 573, -163},				{574, 574, 10792},				{577, 577, OddEven},			{579, 579, -195},			{580, 580, 69},					{581, 581, 71},					{582, 590, EvenOddSkip},
	{837, 837, 116},			{880, 882, EvenOddSkip},		{886, 886, EvenOdd},			{895, 895, 116},				{902, 902, 38},				{904, 906, 37},					{908, 908, 64},					{910, 911, 63},
	{913, 929, 32},				{931, 939, 32},					{962, 962, EvenOdd},			{975, 975, 8},					{976, 976, -30},			{977, 977, -25},				{981, 981, -15},				{982, 982, -22},
	{984, 1006,	EvenOddSkip},	{1008, 1008, -54},				{1009, 1009, -48},				{1012, 1012, -60},				{1013, 1013, -64},			{1015, 1015, OddEven},			{1017, 1017, -7},				{1018, 1018, EvenOdd},
	{1021, 1023, -130},			{1024, 1039, 80},				{1040, 1071, 32},				{1120, 1152, EvenOddSkip},		{1162, 1214, EvenOddSkip},	{1216, 1216, 15},				{1217, 1229, OddEvenSkip},		{1232, 1326, EvenOddSkip},
	{1329, 1366, 48},			{4256, 4293, 7264},				{4295, 4295, 7264},				{4301, 4301, 7264},				{5112, 5117, -8},			{7296, 7296, -6222},			{7297, 7297, -6221},			{7298, 7298, -6212},
	{7299, 7300, -6210},		{7301, 7301, -6211},			{7302, 7302, -6204},			{7303, 7303, -6180},			{7304, 7304, 35267},		{7680, 7828, EvenOddSkip},		{7835, 7835, -58},				{7838, 7838, -7615},
	{7840, 7934, EvenOddSkip},	{7944, 7951, -8},				{7960, 7965, -8},				{7976, 7983, -8},				{7992, 7999, -8},			{8008, 8013, -8},				{8025, 8025, -8},				{8027, 8027, -8},
	{8029, 8029, -8},			{8031, 8031, -8},				{8040, 8047, -8},				{8072, 8079, -8},				{8088, 8095, -8},			{8104, 8111, -8},				{8120, 8121, -8},				{8122, 8123, -74},
	{8124, 8124, -9},			{8126, 8126, -7173},			{8136, 8139, -86},				{8140, 8140, -9},				{8152, 8153, -8},			{8154, 8155, -100},				{8168, 8169, -8},				{8170, 8171, -112},
	{8172, 8172, -7},			{8184, 8185, -128},				{8186, 8187, -126},				{8188, 8188, -9},				{8486, 8486, -7517},		{8490, 8490, -8383},			{8491, 8491, -8262},			{8498, 8498, 28},
	{8544, 8559, 16},			{8579, 8579, OddEven},			{9398, 9423, 26},				{11264, 11310, 48},				{11360, 11360, EvenOdd},	{11362, 11362, -10743},			{11363, 11363, -3814},			{11364, 11364, -10727},
	{11367, 11371, OddEvenSkip},{11373, 11373, -10780},			{11374, 11374, -10749},			{11375, 11375, -10783},			{11376, 11376, -10782},		{11378, 11378, EvenOdd},		{11381, 11381, OddEven},		{11390, 11391, -10815},
	{11392, 11490, EvenOddSkip},{11499, 11501, OddEvenSkip},	{11506, 11506, EvenOdd},		{42560, 42604, EvenOddSkip},	{42624, 42650, EvenOddSkip},{42786, 42798, EvenOddSkip},	{42802, 42862, EvenOddSkip},	{42873, 42875, OddEvenSkip},
	{42877, 42877, -35332},		{42878, 42886, EvenOddSkip},	{42891, 42891, OddEven},		{42893, 42893, -42280},			{42896, 42898, EvenOddSkip},{42902, 42920, EvenOddSkip},	{42922, 42922, -42308},			{42923, 42923, -42319},
	{42924, 42924, -42315},		{42925, 42925, -42305},			{42926, 42926, -42308},			{42928, 42928, -42258},			{42929, 42929, -42282},		{42930, 42930, -42261},			{42931, 42931, 928},			{42932, 42934, EvenOddSkip},
	{43888, 43967, -38864},		{65313, 65338, 32},				{66560, 66599, 40},				{66736, 66771, 40},				{68736, 68786, 64},			{71840, 71871, 32},				{125184, 125217, 34},
};

template<Category C> struct CategoryDef {
	static const interval<char16>	r16[];
	static const interval<char32>	r32[];
	constexpr operator Group() const;//	{ return {make_range(r16), make_range(r32)}; }
};

template<Category C> const interval<char16> CategoryDef<C>::r16[] = {{0,0}};
template<Category C> const interval<char32> CategoryDef<C>::r32[] = {{0,0}};

template<> const interval<char16> CategoryDef<Ps>::r16[] = {
	{40, 40},					{91, 91},					{123, 123},					{3898, 3898},				{3900, 3900},				{5787, 5787},				{8218, 8218},				{8222, 8222},
	{8261, 8261},				{8317, 8317},				{8333, 8333},				{8968, 8968},				{8970, 8970},				{9001, 9001},				{10088, 10088},				{10090, 10090},
	{10092, 10092},				{10094, 10094},				{10096, 10096},				{10098, 10098},				{10100, 10100},				{10181, 10181},				{10214, 10214},				{10216, 10216},
	{10218, 10218},				{10220, 10220},				{10222, 10222},				{10627, 10627},				{10629, 10629},				{10631, 10631},				{10633, 10633},				{10635, 10635},
	{10637, 10637},				{10639, 10639},				{10641, 10641},				{10643, 10643},				{10645, 10645},				{10647, 10647},				{10712, 10712},				{10714, 10714},
	{10748, 10748},				{11810, 11810},				{11812, 11812},				{11814, 11814},				{11816, 11816},				{11842, 11842},				{12296, 12296},				{12298, 12298},
	{12300, 12300},				{12302, 12302},				{12304, 12304},				{12308, 12308},				{12310, 12310},				{12312, 12312},				{12314, 12314},				{12317, 12317},
	{64831, 64831},				{65047, 65047},				{65077, 65077},				{65079, 65079},				{65081, 65081},				{65083, 65083},				{65085, 65085},				{65087, 65087},
	{65089, 65089},				{65091, 65091},				{65095, 65095},				{65113, 65113},				{65115, 65115},				{65117, 65117},				{65288, 65288},				{65339, 65339},
	{65371, 65371},				{65375, 65375},				{65378, 65378},
};
template<> const interval<char32> CategoryDef<Ps>::r32[] = {{0,0}};
template<> const interval<char16> CategoryDef<Nl>::r16[] = {
	{5870, 5872},				{8544, 8578},				{8581, 8584},				{12295, 12295},				{12321, 12329},				{12344, 12346},				{42726, 42735},
};
template<> const interval<char32> CategoryDef<Nl>::r32[] = {
	{65856, 65908},				{66369, 66369},				{66378, 66378},				{66513, 66517},				{74752, 74862},
};
template<> const interval<char16> CategoryDef<No>::r16[] = {
	{178, 179},					{185, 185},					{188, 190},					{2548, 2553},				{2930, 2935},				{3056, 3058},				{3192, 3198},				{3416, 3422},
	{3440, 3448},				{3882, 3891},				{4969, 4988},				{6128, 6137},				{6618, 6618},				{8304, 8304},				{8308, 8313},				{8320, 8329},
	{8528, 8543},				{8585, 8585},				{9312, 9371},				{9450, 9471},				{10102, 10131},				{11517, 11517},				{12690, 12693},				{12832, 12841},
	{12872, 12879},				{12881, 12895},				{12928, 12937},				{12977, 12991},				{43056, 43061},
};
template<> const interval<char32> CategoryDef<No>::r32[] = {
	{65799, 65843},				{65909, 65912},				{65930, 65931},				{66273, 66299},				{66336, 66339},				{67672, 67679},				{67705, 67711},				{67751, 67759},
	{67835, 67839},				{67862, 67867},				{68028, 68029},				{68032, 68047},				{68050, 68095},				{68160, 68167},				{68221, 68222},				{68253, 68255},
	{68331, 68335},				{68440, 68447},				{68472, 68479},				{68521, 68527},				{68858, 68863},				{69216, 69246},				{69714, 69733},				{70113, 70132},
	{71482, 71483},				{71914, 71922},				{72794, 72812},				{93019, 93025},				{119648, 119665},			{125127, 125135},				{127232, 127244},
};
template<> const interval<char16> CategoryDef<Lo>::r16[] = {
	{170, 170},					{186, 186},					{443, 443},					{448, 451},					{660, 660},					{1488, 1514},				{1520, 1522},				{1568, 1599},
	{1601, 1610},				{1646, 1647},				{1649, 1747},				{1749, 1749},				{1774, 1775},				{1786, 1788},				{1791, 1791},				{1808, 1808},
	{1810, 1839},				{1869, 1957},				{1969, 1969},				{1994, 2026},				{2048, 2069},				{2112, 2136},				{2144, 2154},				{2208, 2228},
	{2230, 2237},				{2308, 2361},				{2365, 2365},				{2384, 2384},				{2392, 2401},				{2418, 2432},				{2437, 2444},				{2447, 2448},
	{2451, 2472},				{2474, 2480},				{2482, 2482},				{2486, 2489},				{2493, 2493},				{2510, 2510},				{2524, 2525},				{2527, 2529},
	{2544, 2545},				{2556, 2556},				{2565, 2570},				{2575, 2576},				{2579, 2600},				{2602, 2608},				{2610, 2611},				{2613, 2614},
	{2616, 2617},				{2649, 2652},				{2654, 2654},				{2674, 2676},				{2693, 2701},				{2703, 2705},				{2707, 2728},				{2730, 2736},
	{2738, 2739},				{2741, 2745},				{2749, 2749},				{2768, 2768},				{2784, 2785},				{2809, 2809},				{2821, 2828},				{2831, 2832},
	{2835, 2856},				{2858, 2864},				{2866, 2867},				{2869, 2873},				{2877, 2877},				{2908, 2909},				{2911, 2913},				{2929, 2929},
	{2947, 2947},				{2949, 2954},				{2958, 2960},				{2962, 2965},				{2969, 2970},				{2972, 2972},				{2974, 2975},				{2979, 2980},
	{2984, 2986},				{2990, 3001},				{3024, 3024},				{3077, 3084},				{3086, 3088},				{3090, 3112},				{3114, 3129},				{3133, 3133},
	{3160, 3162},				{3168, 3169},				{3200, 3200},				{3205, 3212},				{3214, 3216},				{3218, 3240},				{3242, 3251},				{3253, 3257},
	{3261, 3261},				{3294, 3294},				{3296, 3297},				{3313, 3314},				{3333, 3340},				{3342, 3344},				{3346, 3386},				{3389, 3389},
	{3406, 3406},				{3412, 3414},				{3423, 3425},				{3450, 3455},				{3461, 3478},				{3482, 3505},				{3507, 3515},				{3517, 3517},
	{3520, 3526},				{3585, 3632},				{3634, 3635},				{3648, 3653},				{3713, 3714},				{3716, 3716},				{3719, 3720},				{3722, 3722},
	{3725, 3725},				{3732, 3735},				{3737, 3743},				{3745, 3747},				{3749, 3749},				{3751, 3751},				{3754, 3755},				{3757, 3760},
	{3762, 3763},				{3773, 3773},				{3776, 3780},				{3804, 3807},				{3840, 3840},				{3904, 3911},				{3913, 3948},				{3976, 3980},
	{4096, 4138},				{4159, 4159},				{4176, 4181},				{4186, 4189},				{4193, 4193},				{4197, 4198},				{4206, 4208},				{4213, 4225},
	{4238, 4238},				{4304, 4346},				{4349, 4680},				{4682, 4685},				{4688, 4694},				{4696, 4696},				{4698, 4701},				{4704, 4744},
	{4746, 4749},				{4752, 4784},				{4786, 4789},				{4792, 4798},				{4800, 4800},				{4802, 4805},				{4808, 4822},				{4824, 4880},
	{4882, 4885},				{4888, 4954},				{4992, 5007},				{5121, 5740},				{5743, 5759},				{5761, 5786},				{5792, 5866},				{5873, 5880},
	{5888, 5900},				{5902, 5905},				{5920, 5937},				{5952, 5969},				{5984, 5996},				{5998, 6000},				{6016, 6067},				{6108, 6108},
	{6176, 6210},				{6212, 6263},				{6272, 6276},				{6279, 6312},				{6314, 6314},				{6320, 6389},				{6400, 6430},				{6480, 6509},
	{6512, 6516},				{6528, 6571},				{6576, 6601},				{6656, 6678},				{6688, 6740},				{6917, 6963},				{6981, 6987},				{7043, 7072},
	{7086, 7087},				{7098, 7141},				{7168, 7203},				{7245, 7247},				{7258, 7287},				{7401, 7404},				{7406, 7409},				{7413, 7414},
	{8501, 8504},				{11568, 11623},				{11648, 11670},				{11680, 11686},				{11688, 11694},				{11696, 11702},				{11704, 11710},				{11712, 11718},
	{11720, 11726},				{11728, 11734},				{11736, 11742},				{12294, 12294},				{12348, 12348},				{12353, 12438},				{12447, 12447},				{12449, 12538},
	{12543, 12543},				{12549, 12590},				{12593, 12686},				{12704, 12730},				{12784, 12799},				{13312, 19893},				{19968, 40938},				{40960, 40980},
	{40982, 42124},				{42192, 42231},				{42240, 42507},				{42512, 42527},				{42538, 42539},				{42606, 42606},				{42656, 42725},				{42895, 42895},
	{42999, 42999},				{43003, 43009},				{43011, 43013},				{43015, 43018},				{43020, 43042},				{43072, 43123},				{43138, 43187},				{43250, 43255},
	{43259, 43259},				{43261, 43261},				{43274, 43301},				{43312, 43334},				{43360, 43388},				{43396, 43442},				{43488, 43492},				{43495, 43503},
	{43514, 43518},				{43520, 43560},				{43584, 43586},				{43588, 43595},				{43616, 43631},				{43633, 43638},				{43642, 43642},				{43646, 43695},
	{43697, 43697},				{43701, 43702},				{43705, 43709},				{43712, 43712},				{43714, 43714},				{43739, 43740},				{43744, 43754},				{43762, 43762},
	{43777, 43782},				{43785, 43790},				{43793, 43798},				{43808, 43814},				{43816, 43822},				{43968, 44002},				{44032, 55203},				{55216, 55238},
	{55243, 55291},				{63744, 64109},				{64112, 64217},				{64285, 64285},				{64287, 64296},				{64298, 64310},				{64312, 64316},				{64318, 64318},
	{64320, 64321},				{64323, 64324},				{64326, 64433},				{64467, 64829},				{64848, 64911},				{64914, 64967},				{65008, 65019},				{65136, 65140},
	{65142, 65276},				{65382, 65391},				{65393, 65437},				{65440, 65470},				{65474, 65479},				{65482, 65487},				{65490, 65495},				{65498, 65500},
};
template<> const interval<char32> CategoryDef<Lo>::r32[] = {
	{65536, 65547},				{65549, 65574},				{65576, 65594},				{65596, 65597},				{65599, 65613},				{65616, 65629},				{65664, 65786},				{66176, 66204},
	{66208, 66256},				{66304, 66335},				{66349, 66368},				{66370, 66377},				{66384, 66421},				{66432, 66461},				{66464, 66499},				{66504, 66511},
	{66640, 66717},				{66816, 66855},				{66864, 66915},				{67072, 67382},				{67392, 67413},				{67424, 67431},				{67584, 67589},				{67592, 67592},
	{67594, 67637},				{67639, 67640},				{67644, 67644},				{67647, 67669},				{67680, 67702},				{67712, 67742},				{67808, 67826},				{67828, 67829},
	{67840, 67861},				{67872, 67897},				{67968, 68023},				{68030, 68031},				{68096, 68096},				{68112, 68115},				{68117, 68119},				{68121, 68147},
	{68192, 68220},				{68224, 68252},				{68288, 68295},				{68297, 68324},				{68352, 68405},				{68416, 68437},				{68448, 68466},				{68480, 68497},
	{68608, 68680},				{69635, 69687},				{69763, 69807},				{69840, 69864},				{69891, 69926},				{69968, 70002},				{70006, 70006},				{70019, 70066},
	{70081, 70084},				{70106, 70106},				{70108, 70108},				{70144, 70161},				{70163, 70187},				{70272, 70278},				{70280, 70280},				{70282, 70285},
	{70287, 70301},				{70303, 70312},				{70320, 70366},				{70405, 70412},				{70415, 70416},				{70419, 70440},				{70442, 70448},				{70450, 70451},
	{70453, 70457},				{70461, 70461},				{70480, 70480},				{70493, 70497},				{70656, 70708},				{70727, 70730},				{70784, 70831},				{70852, 70853},
	{70855, 70855},				{71040, 71086},				{71128, 71131},				{71168, 71215},				{71236, 71236},				{71296, 71338},				{71424, 71449},				{71935, 71935},
	{72192, 72192},				{72203, 72242},				{72250, 72250},				{72272, 72272},				{72284, 72323},				{72326, 72329},				{72384, 72440},				{72704, 72712},
	{72714, 72750},				{72768, 72768},				{72818, 72847},				{72960, 72966},				{72968, 72969},				{72971, 73008},				{73030, 73030},				{73728, 74649},
	{74880, 75075},				{77824, 78894},				{82944, 83526},				{92160, 92728},				{92736, 92766},				{92880, 92909},				{92928, 92975},				{93027, 93047},
	{93053, 93071},				{93952, 94020},				{94032, 94032},				{94208, 100332},			{100352, 101106},			{110592, 110878},			{110960, 111355},			{113664, 113770},
	{113776, 113788},			{113792, 113800},			{113808, 113817},			{124928, 125124},			{126464, 126467},			{126469, 126495},			{126497, 126498},			{126500, 126500},
	{126503, 126503},			{126505, 126514},			{126516, 126519},			{126521, 126521},			{126523, 126523},			{126530, 126530},			{126535, 126535},			{126537, 126537},
	{126539, 126539},			{126541, 126543},			{126545, 126546},			{126548, 126548},			{126551, 126551},			{126553, 126553},			{126555, 126555},			{126557, 126557},
	{126559, 126559},			{126561, 126562},			{126564, 126564},			{126567, 126570},			{126572, 126578},			{126580, 126583},			{126585, 126588},			{126590, 126590},
	{126592, 126601},			{126603, 126619},			{126625, 126627},			{126629, 126633},			{126635, 126651},			{131072, 173782},			{173824, 177972},			{177984, 178205},
	{178208, 183969},			{183984, 191456},			{194560, 195101},
};
template<> const interval<char16> CategoryDef<Ll>::r16[] = {
	{97, 122},					{181, 181},					{223, 246},					{248, 255},					{257, 257},					{259, 259},					{261, 261},					{263, 263},
	{265, 265},					{267, 267},					{269, 269},					{271, 271},					{273, 273},					{275, 275},					{277, 277},					{279, 279},
	{281, 281},					{283, 283},					{285, 285},					{287, 287},					{289, 289},					{291, 291},					{293, 293},					{295, 295},
	{297, 297},					{299, 299},					{301, 301},					{303, 303},					{305, 305},					{307, 307},					{309, 309},					{311, 312},
	{314, 314},					{316, 316},					{318, 318},					{320, 320},					{322, 322},					{324, 324},					{326, 326},					{328, 329},
	{331, 331},					{333, 333},					{335, 335},					{337, 337},					{339, 339},					{341, 341},					{343, 343},					{345, 345},
	{347, 347},					{349, 349},					{351, 351},					{353, 353},					{355, 355},					{357, 357},					{359, 359},					{361, 361},
	{363, 363},					{365, 365},					{367, 367},					{369, 369},					{371, 371},					{373, 373},					{375, 375},					{378, 378},
	{380, 380},					{382, 384},					{387, 387},					{389, 389},					{392, 392},					{396, 397},					{402, 402},					{405, 405},
	{409, 411},					{414, 414},					{417, 417},					{419, 419},					{421, 421},					{424, 424},					{426, 427},					{429, 429},
	{432, 432},					{436, 436},					{438, 438},					{441, 442},					{445, 447},					{454, 454},					{457, 457},					{460, 460},
	{462, 462},					{464, 464},					{466, 466},					{468, 468},					{470, 470},					{472, 472},					{474, 474},					{476, 477},
	{479, 479},					{481, 481},					{483, 483},					{485, 485},					{487, 487},					{489, 489},					{491, 491},					{493, 493},
	{495, 496},					{499, 499},					{501, 501},					{505, 505},					{507, 507},					{509, 509},					{511, 511},					{513, 513},
	{515, 515},					{517, 517},					{519, 519},					{521, 521},					{523, 523},					{525, 525},					{527, 527},					{529, 529},
	{531, 531},					{533, 533},					{535, 535},					{537, 537},					{539, 539},					{541, 541},					{543, 543},					{545, 545},
	{547, 547},					{549, 549},					{551, 551},					{553, 553},					{555, 555},					{557, 557},					{559, 559},					{561, 561},
	{563, 569},					{572, 572},					{575, 576},					{578, 578},					{583, 583},					{585, 585},					{587, 587},					{589, 589},
	{591, 659},					{661, 687},					{881, 881},					{883, 883},					{887, 887},					{891, 893},					{912, 912},					{940, 974},
	{976, 977},					{981, 983},					{985, 985},					{987, 987},					{989, 989},					{991, 991},					{993, 993},					{995, 995},
	{997, 997},					{999, 999},					{1001, 1001},				{1003, 1003},				{1005, 1005},				{1007, 1011},				{1013, 1013},				{1016, 1016},
	{1019, 1020},				{1072, 1119},				{1121, 1121},				{1123, 1123},				{1125, 1125},				{1127, 1127},				{1129, 1129},				{1131, 1131},
	{1133, 1133},				{1135, 1135},				{1137, 1137},				{1139, 1139},				{1141, 1141},				{1143, 1143},				{1145, 1145},				{1147, 1147},
	{1149, 1149},				{1151, 1151},				{1153, 1153},				{1163, 1163},				{1165, 1165},				{1167, 1167},				{1169, 1169},				{1171, 1171},
	{1173, 1173},				{1175, 1175},				{1177, 1177},				{1179, 1179},				{1181, 1181},				{1183, 1183},				{1185, 1185},				{1187, 1187},
	{1189, 1189},				{1191, 1191},				{1193, 1193},				{1195, 1195},				{1197, 1197},				{1199, 1199},				{1201, 1201},				{1203, 1203},
	{1205, 1205},				{1207, 1207},				{1209, 1209},				{1211, 1211},				{1213, 1213},				{1215, 1215},				{1218, 1218},				{1220, 1220},
	{1222, 1222},				{1224, 1224},				{1226, 1226},				{1228, 1228},				{1230, 1231},				{1233, 1233},				{1235, 1235},				{1237, 1237},
	{1239, 1239},				{1241, 1241},				{1243, 1243},				{1245, 1245},				{1247, 1247},				{1249, 1249},				{1251, 1251},				{1253, 1253},
	{1255, 1255},				{1257, 1257},				{1259, 1259},				{1261, 1261},				{1263, 1263},				{1265, 1265},				{1267, 1267},				{1269, 1269},
	{1271, 1271},				{1273, 1273},				{1275, 1275},				{1277, 1277},				{1279, 1279},				{1281, 1281},				{1283, 1283},				{1285, 1285},
	{1287, 1287},				{1289, 1289},				{1291, 1291},				{1293, 1293},				{1295, 1295},				{1297, 1297},				{1299, 1299},				{1301, 1301},
	{1303, 1303},				{1305, 1305},				{1307, 1307},				{1309, 1309},				{1311, 1311},				{1313, 1313},				{1315, 1315},				{1317, 1317},
	{1319, 1319},				{1321, 1321},				{1323, 1323},				{1325, 1325},				{1327, 1327},				{1377, 1415},				{5112, 5117},				{7296, 7304},
	{7424, 7467},				{7531, 7543},				{7545, 7578},				{7681, 7681},				{7683, 7683},				{7685, 7685},				{7687, 7687},				{7689, 7689},
	{7691, 7691},				{7693, 7693},				{7695, 7695},				{7697, 7697},				{7699, 7699},				{7701, 7701},				{7703, 7703},				{7705, 7705},
	{7707, 7707},				{7709, 7709},				{7711, 7711},				{7713, 7713},				{7715, 7715},				{7717, 7717},				{7719, 7719},				{7721, 7721},
	{7723, 7723},				{7725, 7725},				{7727, 7727},				{7729, 7729},				{7731, 7731},				{7733, 7733},				{7735, 7735},				{7737, 7737},
	{7739, 7739},				{7741, 7741},				{7743, 7743},				{7745, 7745},				{7747, 7747},				{7749, 7749},				{7751, 7751},				{7753, 7753},
	{7755, 7755},				{7757, 7757},				{7759, 7759},				{7761, 7761},				{7763, 7763},				{7765, 7765},				{7767, 7767},				{7769, 7769},
	{7771, 7771},				{7773, 7773},				{7775, 7775},				{7777, 7777},				{7779, 7779},				{7781, 7781},				{7783, 7783},				{7785, 7785},
	{7787, 7787},				{7789, 7789},				{7791, 7791},				{7793, 7793},				{7795, 7795},				{7797, 7797},				{7799, 7799},				{7801, 7801},
	{7803, 7803},				{7805, 7805},				{7807, 7807},				{7809, 7809},				{7811, 7811},				{7813, 7813},				{7815, 7815},				{7817, 7817},
	{7819, 7819},				{7821, 7821},				{7823, 7823},				{7825, 7825},				{7827, 7827},				{7829, 7837},				{7839, 7839},				{7841, 7841},
	{7843, 7843},				{7845, 7845},				{7847, 7847},				{7849, 7849},				{7851, 7851},				{7853, 7853},				{7855, 7855},				{7857, 7857},
	{7859, 7859},				{7861, 7861},				{7863, 7863},				{7865, 7865},				{7867, 7867},				{7869, 7869},				{7871, 7871},				{7873, 7873},
	{7875, 7875},				{7877, 7877},				{7879, 7879},				{7881, 7881},				{7883, 7883},				{7885, 7885},				{7887, 7887},				{7889, 7889},
	{7891, 7891},				{7893, 7893},				{7895, 7895},				{7897, 7897},				{7899, 7899},				{7901, 7901},				{7903, 7903},				{7905, 7905},
	{7907, 7907},				{7909, 7909},				{7911, 7911},				{7913, 7913},				{7915, 7915},				{7917, 7917},				{7919, 7919},				{7921, 7921},
	{7923, 7923},				{7925, 7925},				{7927, 7927},				{7929, 7929},				{7931, 7931},				{7933, 7933},				{7935, 7943},				{7952, 7957},
	{7968, 7975},				{7984, 7991},				{8000, 8005},				{8016, 8023},				{8032, 8039},				{8048, 8061},				{8064, 8071},				{8080, 8087},
	{8096, 8103},				{8112, 8116},				{8118, 8119},				{8126, 8126},				{8130, 8132},				{8134, 8135},				{8144, 8147},				{8150, 8151},
	{8160, 8167},				{8178, 8180},				{8182, 8183},				{8458, 8458},				{8462, 8463},				{8467, 8467},				{8495, 8495},				{8500, 8500},
	{8505, 8505},				{8508, 8509},				{8518, 8521},				{8526, 8526},				{8580, 8580},				{11312, 11358},				{11361, 11361},				{11365, 11366},
	{11368, 11368},				{11370, 11370},				{11372, 11372},				{11377, 11377},				{11379, 11380},				{11382, 11387},				{11393, 11393},				{11395, 11395},
	{11397, 11397},				{11399, 11399},				{11401, 11401},				{11403, 11403},				{11405, 11405},				{11407, 11407},				{11409, 11409},				{11411, 11411},
	{11413, 11413},				{11415, 11415},				{11417, 11417},				{11419, 11419},				{11421, 11421},				{11423, 11423},				{11425, 11425},				{11427, 11427},
	{11429, 11429},				{11431, 11431},				{11433, 11433},				{11435, 11435},				{11437, 11437},				{11439, 11439},				{11441, 11441},				{11443, 11443},
	{11445, 11445},				{11447, 11447},				{11449, 11449},				{11451, 11451},				{11453, 11453},				{11455, 11455},				{11457, 11457},				{11459, 11459},
	{11461, 11461},				{11463, 11463},				{11465, 11465},				{11467, 11467},				{11469, 11469},				{11471, 11471},				{11473, 11473},				{11475, 11475},
	{11477, 11477},				{11479, 11479},				{11481, 11481},				{11483, 11483},				{11485, 11485},				{11487, 11487},				{11489, 11489},				{11491, 11492},
	{11500, 11500},				{11502, 11502},				{11507, 11507},				{11520, 11557},				{11559, 11559},				{11565, 11565},				{42561, 42561},				{42563, 42563},
	{42565, 42565},				{42567, 42567},				{42569, 42569},				{42571, 42571},				{42573, 42573},				{42575, 42575},				{42577, 42577},				{42579, 42579},
	{42581, 42581},				{42583, 42583},				{42585, 42585},				{42587, 42587},				{42589, 42589},				{42591, 42591},				{42593, 42593},				{42595, 42595},
	{42597, 42597},				{42599, 42599},				{42601, 42601},				{42603, 42603},				{42605, 42605},				{42625, 42625},				{42627, 42627},				{42629, 42629},
	{42631, 42631},				{42633, 42633},				{42635, 42635},				{42637, 42637},				{42639, 42639},				{42641, 42641},				{42643, 42643},				{42645, 42645},
	{42647, 42647},				{42649, 42649},				{42651, 42651},				{42787, 42787},				{42789, 42789},				{42791, 42791},				{42793, 42793},				{42795, 42795},
	{42797, 42797},				{42799, 42801},				{42803, 42803},				{42805, 42805},				{42807, 42807},				{42809, 42809},				{42811, 42811},				{42813, 42813},
	{42815, 42815},				{42817, 42817},				{42819, 42819},				{42821, 42821},				{42823, 42823},				{42825, 42825},				{42827, 42827},				{42829, 42829},
	{42831, 42831},				{42833, 42833},				{42835, 42835},				{42837, 42837},				{42839, 42839},				{42841, 42841},				{42843, 42843},				{42845, 42845},
	{42847, 42847},				{42849, 42849},				{42851, 42851},				{42853, 42853},				{42855, 42855},				{42857, 42857},				{42859, 42859},				{42861, 42861},
	{42863, 42863},				{42865, 42872},				{42874, 42874},				{42876, 42876},				{42879, 42879},				{42881, 42881},				{42883, 42883},				{42885, 42885},
	{42887, 42887},				{42892, 42892},				{42894, 42894},				{42897, 42897},				{42899, 42901},				{42903, 42903},				{42905, 42905},				{42907, 42907},
	{42909, 42909},				{42911, 42911},				{42913, 42913},				{42915, 42915},				{42917, 42917},				{42919, 42919},				{42921, 42921},				{42933, 42933},
	{42935, 42935},				{43002, 43002},				{43824, 43866},				{43872, 43877},				{43888, 43967},				{64256, 64262},				{64275, 64279},				{65345, 65370},
};
template<> const interval<char32> CategoryDef<Ll>::r32[] = {
	{66600, 66639},				{66776, 66811},				{68800, 68850},				{71872, 71903},				{119834, 119859},			{119886, 119892},			{119894, 119911},			{119938, 119963},
	{119990, 119993},			{119995, 119995},			{119997, 120003},			{120005, 120015},			{120042, 120067},			{120094, 120119},			{120146, 120171},			{120198, 120223},
	{120250, 120275},			{120302, 120327},			{120354, 120379},			{120406, 120431},			{120458, 120485},			{120514, 120538},			{120540, 120545},			{120572, 120596},
	{120598, 120603},			{120630, 120654},			{120656, 120661},			{120688, 120712},			{120714, 120719},			{120746, 120770},			{120772, 120777},			{120779, 120779},
	{125218, 125251},
};
template<> const interval<char16> CategoryDef<Lm>::r16[] = {
	{688, 705},					{710, 721},					{736, 740},					{748, 748},					{750, 750},					{884, 884},					{890, 890},					{1369, 1369},
	{1600, 1600},				{1765, 1766},				{2036, 2037},				{2042, 2042},				{2074, 2074},				{2084, 2084},				{2088, 2088},				{2417, 2417},
	{3654, 3654},				{3782, 3782},				{4348, 4348},				{6103, 6103},				{6211, 6211},				{6823, 6823},				{7288, 7293},				{7468, 7530},
	{7544, 7544},				{7579, 7615},				{8305, 8305},				{8319, 8319},				{8336, 8348},				{11388, 11389},				{11631, 11631},				{11823, 11823},
	{12293, 12293},				{12337, 12341},				{12347, 12347},				{12445, 12446},				{12540, 12542},				{40981, 40981},				{42232, 42237},				{42508, 42508},
	{42623, 42623},				{42652, 42653},				{42775, 42783},				{42864, 42864},				{42888, 42888},				{43000, 43001},				{43471, 43471},				{43494, 43494},
	{43632, 43632},				{43741, 43741},				{43763, 43764},				{43868, 43871},				{65392, 65392},				{65438, 65439},
};
template<> const interval<char32> CategoryDef<Lm>::r32[] = {
	{92992, 92995},				{94099, 94111},				{94176, 94177},
};
template<> const interval<char16> CategoryDef<Nd>::r16[] = {
	{48, 57},					{1632, 1641},				{1776, 1785},				{1984, 1993},				{2406, 2415},				{2534, 2543},				{2662, 2671},				{2790, 2799},
	{2918, 2927},				{3046, 3055},				{3174, 3183},				{3302, 3311},				{3430, 3439},				{3558, 3567},				{3664, 3673},				{3792, 3801},
	{3872, 3881},				{4160, 4169},				{4240, 4249},				{6112, 6121},				{6160, 6169},				{6470, 6479},				{6608, 6617},				{6784, 6793},
	{6800, 6809},				{6992, 7001},				{7088, 7097},				{7232, 7241},				{7248, 7257},				{42528, 42537},				{43216, 43225},				{43264, 43273},
	{43472, 43481},				{43504, 43513},				{43600, 43609},				{44016, 44025},				{65296, 65305},
};
template<> const interval<char32> CategoryDef<Nd>::r32[] = {
	{66720, 66729},				{69734, 69743},				{69872, 69881},				{69942, 69951},				{70096, 70105},				{70384, 70393},				{70736, 70745},				{70864, 70873},
	{71248, 71257},				{71360, 71369},				{71472, 71481},				{71904, 71913},				{72784, 72793},				{73040, 73049},				{92768, 92777},				{93008, 93017},
	{120782, 120831},			{125264, 125273},
};
template<> const interval<char16> CategoryDef<Pc>::r16[] = {
	{95, 95},					{8255, 8256},				{8276, 8276},				{65075, 65076},				{65101, 65103},				{65343, 65343},
};
template<> const interval<char32> CategoryDef<Pc>::r32[] = {{0,0}};
template<> const interval<char16> CategoryDef<Lt>::r16[] = {
	{453, 453},					{456, 456},					{459, 459},					{498, 498},					{8072, 8079},				{8088, 8095},				{8104, 8111},				{8124, 8124},
	{8140, 8140},				{8188, 8188},
};
template<> const interval<char32> CategoryDef<Lt>::r32[] = {{0,0}};
template<> const interval<char16> CategoryDef<Lu>::r16[] = {
	{65, 90},					{192, 214},					{216, 222},					{256, 256},					{258, 258},					{260, 260},					{262, 262},					{264, 264},
	{266, 266},					{268, 268},					{270, 270},					{272, 272},					{274, 274},					{276, 276},					{278, 278},					{280, 280},
	{282, 282},					{284, 284},					{286, 286},					{288, 288},					{290, 290},					{292, 292},					{294, 294},					{296, 296},
	{298, 298},					{300, 300},					{302, 302},					{304, 304},					{306, 306},					{308, 308},					{310, 310},					{313, 313},
	{315, 315},					{317, 317},					{319, 319},					{321, 321},					{323, 323},					{325, 325},					{327, 327},					{330, 330},
	{332, 332},					{334, 334},					{336, 336},					{338, 338},					{340, 340},					{342, 342},					{344, 344},					{346, 346},
	{348, 348},					{350, 350},					{352, 352},					{354, 354},					{356, 356},					{358, 358},					{360, 360},					{362, 362},
	{364, 364},					{366, 366},					{368, 368},					{370, 370},					{372, 372},					{374, 374},					{376, 377},					{379, 379},
	{381, 381},					{385, 386},					{388, 388},					{390, 391},					{393, 395},					{398, 401},					{403, 404},					{406, 408},
	{412, 413},					{415, 416},					{418, 418},					{420, 420},					{422, 423},					{425, 425},					{428, 428},					{430, 431},
	{433, 435},					{437, 437},					{439, 440},					{444, 444},					{452, 452},					{455, 455},					{458, 458},					{461, 461},
	{463, 463},					{465, 465},					{467, 467},					{469, 469},					{471, 471},					{473, 473},					{475, 475},					{478, 478},
	{480, 480},					{482, 482},					{484, 484},					{486, 486},					{488, 488},					{490, 490},					{492, 492},					{494, 494},
	{497, 497},					{500, 500},					{502, 504},					{506, 506},					{508, 508},					{510, 510},					{512, 512},					{514, 514},
	{516, 516},					{518, 518},					{520, 520},					{522, 522},					{524, 524},					{526, 526},					{528, 528},					{530, 530},
	{532, 532},					{534, 534},					{536, 536},					{538, 538},					{540, 540},					{542, 542},					{544, 544},					{546, 546},
	{548, 548},					{550, 550},					{552, 552},					{554, 554},					{556, 556},					{558, 558},					{560, 560},					{562, 562},
	{570, 571},					{573, 574},					{577, 577},					{579, 582},					{584, 584},					{586, 586},					{588, 588},					{590, 590},
	{880, 880},					{882, 882},					{886, 886},					{895, 895},					{902, 902},					{904, 906},					{908, 908},					{910, 911},
	{913, 929},					{931, 939},					{975, 975},					{978, 980},					{984, 984},					{986, 986},					{988, 988},					{990, 990},
	{992, 992},					{994, 994},					{996, 996},					{998, 998},					{1000, 1000},				{1002, 1002},				{1004, 1004},				{1006, 1006},
	{1012, 1012},				{1015, 1015},				{1017, 1018},				{1021, 1071},				{1120, 1120},				{1122, 1122},				{1124, 1124},				{1126, 1126},
	{1128, 1128},				{1130, 1130},				{1132, 1132},				{1134, 1134},				{1136, 1136},				{1138, 1138},				{1140, 1140},				{1142, 1142},
	{1144, 1144},				{1146, 1146},				{1148, 1148},				{1150, 1150},				{1152, 1152},				{1162, 1162},				{1164, 1164},				{1166, 1166},
	{1168, 1168},				{1170, 1170},				{1172, 1172},				{1174, 1174},				{1176, 1176},				{1178, 1178},				{1180, 1180},				{1182, 1182},
	{1184, 1184},				{1186, 1186},				{1188, 1188},				{1190, 1190},				{1192, 1192},				{1194, 1194},				{1196, 1196},				{1198, 1198},
	{1200, 1200},				{1202, 1202},				{1204, 1204},				{1206, 1206},				{1208, 1208},				{1210, 1210},				{1212, 1212},				{1214, 1214},
	{1216, 1217},				{1219, 1219},				{1221, 1221},				{1223, 1223},				{1225, 1225},				{1227, 1227},				{1229, 1229},				{1232, 1232},
	{1234, 1234},				{1236, 1236},				{1238, 1238},				{1240, 1240},				{1242, 1242},				{1244, 1244},				{1246, 1246},				{1248, 1248},
	{1250, 1250},				{1252, 1252},				{1254, 1254},				{1256, 1256},				{1258, 1258},				{1260, 1260},				{1262, 1262},				{1264, 1264},
	{1266, 1266},				{1268, 1268},				{1270, 1270},				{1272, 1272},				{1274, 1274},				{1276, 1276},				{1278, 1278},				{1280, 1280},
	{1282, 1282},				{1284, 1284},				{1286, 1286},				{1288, 1288},				{1290, 1290},				{1292, 1292},				{1294, 1294},				{1296, 1296},
	{1298, 1298},				{1300, 1300},				{1302, 1302},				{1304, 1304},				{1306, 1306},				{1308, 1308},				{1310, 1310},				{1312, 1312},
	{1314, 1314},				{1316, 1316},				{1318, 1318},				{1320, 1320},				{1322, 1322},				{1324, 1324},				{1326, 1326},				{1329, 1366},
	{4256, 4293},				{4295, 4295},				{4301, 4301},				{5024, 5109},				{7680, 7680},				{7682, 7682},				{7684, 7684},				{7686, 7686},
	{7688, 7688},				{7690, 7690},				{7692, 7692},				{7694, 7694},				{7696, 7696},				{7698, 7698},				{7700, 7700},				{7702, 7702},
	{7704, 7704},				{7706, 7706},				{7708, 7708},				{7710, 7710},				{7712, 7712},				{7714, 7714},				{7716, 7716},				{7718, 7718},
	{7720, 7720},				{7722, 7722},				{7724, 7724},				{7726, 7726},				{7728, 7728},				{7730, 7730},				{7732, 7732},				{7734, 7734},
	{7736, 7736},				{7738, 7738},				{7740, 7740},				{7742, 7742},				{7744, 7744},				{7746, 7746},				{7748, 7748},				{7750, 7750},
	{7752, 7752},				{7754, 7754},				{7756, 7756},				{7758, 7758},				{7760, 7760},				{7762, 7762},				{7764, 7764},				{7766, 7766},
	{7768, 7768},				{7770, 7770},				{7772, 7772},				{7774, 7774},				{7776, 7776},				{7778, 7778},				{7780, 7780},				{7782, 7782},
	{7784, 7784},				{7786, 7786},				{7788, 7788},				{7790, 7790},				{7792, 7792},				{7794, 7794},				{7796, 7796},				{7798, 7798},
	{7800, 7800},				{7802, 7802},				{7804, 7804},				{7806, 7806},				{7808, 7808},				{7810, 7810},				{7812, 7812},				{7814, 7814},
	{7816, 7816},				{7818, 7818},				{7820, 7820},				{7822, 7822},				{7824, 7824},				{7826, 7826},				{7828, 7828},				{7838, 7838},
	{7840, 7840},				{7842, 7842},				{7844, 7844},				{7846, 7846},				{7848, 7848},				{7850, 7850},				{7852, 7852},				{7854, 7854},
	{7856, 7856},				{7858, 7858},				{7860, 7860},				{7862, 7862},				{7864, 7864},				{7866, 7866},				{7868, 7868},				{7870, 7870},
	{7872, 7872},				{7874, 7874},				{7876, 7876},				{7878, 7878},				{7880, 7880},				{7882, 7882},				{7884, 7884},				{7886, 7886},
	{7888, 7888},				{7890, 7890},				{7892, 7892},				{7894, 7894},				{7896, 7896},				{7898, 7898},				{7900, 7900},				{7902, 7902},
	{7904, 7904},				{7906, 7906},				{7908, 7908},				{7910, 7910},				{7912, 7912},				{7914, 7914},				{7916, 7916},				{7918, 7918},
	{7920, 7920},				{7922, 7922},				{7924, 7924},				{7926, 7926},				{7928, 7928},				{7930, 7930},				{7932, 7932},				{7934, 7934},
	{7944, 7951},				{7960, 7965},				{7976, 7983},				{7992, 7999},				{8008, 8013},				{8025, 8025},				{8027, 8027},				{8029, 8029},
	{8031, 8031},				{8040, 8047},				{8120, 8123},				{8136, 8139},				{8152, 8155},				{8168, 8172},				{8184, 8187},				{8450, 8450},
	{8455, 8455},				{8459, 8461},				{8464, 8466},				{8469, 8469},				{8473, 8477},				{8484, 8484},				{8486, 8486},				{8488, 8488},
	{8490, 8493},				{8496, 8499},				{8510, 8511},				{8517, 8517},				{8579, 8579},				{11264, 11310},				{11360, 11360},				{11362, 11364},
	{11367, 11367},				{11369, 11369},				{11371, 11371},				{11373, 11376},				{11378, 11378},				{11381, 11381},				{11390, 11392},				{11394, 11394},
	{11396, 11396},				{11398, 11398},				{11400, 11400},				{11402, 11402},				{11404, 11404},				{11406, 11406},				{11408, 11408},				{11410, 11410},
	{11412, 11412},				{11414, 11414},				{11416, 11416},				{11418, 11418},				{11420, 11420},				{11422, 11422},				{11424, 11424},				{11426, 11426},
	{11428, 11428},				{11430, 11430},				{11432, 11432},				{11434, 11434},				{11436, 11436},				{11438, 11438},				{11440, 11440},				{11442, 11442},
	{11444, 11444},				{11446, 11446},				{11448, 11448},				{11450, 11450},				{11452, 11452},				{11454, 11454},				{11456, 11456},				{11458, 11458},
	{11460, 11460},				{11462, 11462},				{11464, 11464},				{11466, 11466},				{11468, 11468},				{11470, 11470},				{11472, 11472},				{11474, 11474},
	{11476, 11476},				{11478, 11478},				{11480, 11480},				{11482, 11482},				{11484, 11484},				{11486, 11486},				{11488, 11488},				{11490, 11490},
	{11499, 11499},				{11501, 11501},				{11506, 11506},				{42560, 42560},				{42562, 42562},				{42564, 42564},				{42566, 42566},				{42568, 42568},
	{42570, 42570},				{42572, 42572},				{42574, 42574},				{42576, 42576},				{42578, 42578},				{42580, 42580},				{42582, 42582},				{42584, 42584},
	{42586, 42586},				{42588, 42588},				{42590, 42590},				{42592, 42592},				{42594, 42594},				{42596, 42596},				{42598, 42598},				{42600, 42600},
	{42602, 42602},				{42604, 42604},				{42624, 42624},				{42626, 42626},				{42628, 42628},				{42630, 42630},				{42632, 42632},				{42634, 42634},
	{42636, 42636},				{42638, 42638},				{42640, 42640},				{42642, 42642},				{42644, 42644},				{42646, 42646},				{42648, 42648},				{42650, 42650},
	{42786, 42786},				{42788, 42788},				{42790, 42790},				{42792, 42792},				{42794, 42794},				{42796, 42796},				{42798, 42798},				{42802, 42802},
	{42804, 42804},				{42806, 42806},				{42808, 42808},				{42810, 42810},				{42812, 42812},				{42814, 42814},				{42816, 42816},				{42818, 42818},
	{42820, 42820},				{42822, 42822},				{42824, 42824},				{42826, 42826},				{42828, 42828},				{42830, 42830},				{42832, 42832},				{42834, 42834},
	{42836, 42836},				{42838, 42838},				{42840, 42840},				{42842, 42842},				{42844, 42844},				{42846, 42846},				{42848, 42848},				{42850, 42850},
	{42852, 42852},				{42854, 42854},				{42856, 42856},				{42858, 42858},				{42860, 42860},				{42862, 42862},				{42873, 42873},				{42875, 42875},
	{42877, 42878},				{42880, 42880},				{42882, 42882},				{42884, 42884},				{42886, 42886},				{42891, 42891},				{42893, 42893},				{42896, 42896},
	{42898, 42898},				{42902, 42902},				{42904, 42904},				{42906, 42906},				{42908, 42908},				{42910, 42910},				{42912, 42912},				{42914, 42914},
	{42916, 42916},				{42918, 42918},				{42920, 42920},				{42922, 42926},				{42928, 42932},				{42934, 42934},				{65313, 65338},
};
template<> const interval<char32> CategoryDef<Lu>::r32[] = {
	{66560, 66599},				{66736, 66771},				{68736, 68786},				{71840, 71871},				{119808, 119833},			{119860, 119885},			{119912, 119937},			{119964, 119964},
	{119966, 119967},			{119970, 119970},			{119973, 119974},			{119977, 119980},			{119982, 119989},			{120016, 120041},			{120068, 120069},			{120071, 120074},
	{120077, 120084},			{120086, 120092},			{120120, 120121},			{120123, 120126},			{120128, 120132},			{120134, 120134},			{120138, 120144},			{120172, 120197},
	{120224, 120249},			{120276, 120301},			{120328, 120353},			{120380, 120405},			{120432, 120457},			{120488, 120512},			{120546, 120570},			{120604, 120628},
	{120662, 120686},			{120720, 120744},			{120778, 120778},			{125184, 125217},
};
template<> const interval<char16> CategoryDef<Pf>::r16[] = {
	{187, 187},					{8217, 8217},				{8221, 8221},				{8250, 8250},				{11779, 11779},				{11781, 11781},				{11786, 11786},				{11789, 11789},
	{11805, 11805},				{11809, 11809},
};
template<> const interval<char32> CategoryDef<Pf>::r32[] = {{0,0}};
template<> const interval<char16> CategoryDef<Pd>::r16[] = {
	{45, 45},					{1418, 1418},				{1470, 1470},				{5120, 5120},				{6150, 6150},				{8208, 8213},				{11799, 11799},				{11802, 11802},
	{11834, 11835},				{11840, 11840},				{12316, 12316},				{12336, 12336},				{12448, 12448},				{65073, 65074},				{65112, 65112},				{65123, 65123},
	{65293, 65293},
};
template<> const interval<char32> CategoryDef<Pd>::r32[] = {{0,0}};

template<> const interval<char16> CategoryDef<Pe>::r16[] = {
	{41, 41},					{93, 93},					{125, 125},					{3899, 3899},				{3901, 3901},				{5788, 5788},				{8262, 8262},				{8318, 8318},
	{8334, 8334},				{8969, 8969},				{8971, 8971},				{9002, 9002},				{10089, 10089},				{10091, 10091},				{10093, 10093},				{10095, 10095},
	{10097, 10097},				{10099, 10099},				{10101, 10101},				{10182, 10182},				{10215, 10215},				{10217, 10217},				{10219, 10219},				{10221, 10221},
	{10223, 10223},				{10628, 10628},				{10630, 10630},				{10632, 10632},				{10634, 10634},				{10636, 10636},				{10638, 10638},				{10640, 10640},
	{10642, 10642},				{10644, 10644},				{10646, 10646},				{10648, 10648},				{10713, 10713},				{10715, 10715},				{10749, 10749},				{11811, 11811},
	{11813, 11813},				{11815, 11815},				{11817, 11817},				{12297, 12297},				{12299, 12299},				{12301, 12301},				{12303, 12303},				{12305, 12305},
	{12309, 12309},				{12311, 12311},				{12313, 12313},				{12315, 12315},				{12318, 12319},				{64830, 64830},				{65048, 65048},				{65078, 65078},
	{65080, 65080},				{65082, 65082},				{65084, 65084},				{65086, 65086},				{65088, 65088},				{65090, 65090},				{65092, 65092},				{65096, 65096},
	{65114, 65114},				{65116, 65116},				{65118, 65118},				{65289, 65289},				{65341, 65341},				{65373, 65373},				{65376, 65376},				{65379, 65379},
};
template<> const interval<char32> CategoryDef<Pe>::r32[] = {{0,0}};
template<> const interval<char16> CategoryDef<Pi>::r16[] = {
	{171, 171},					{8216, 8216},				{8219, 8220},				{8223, 8223},				{8249, 8249},				{11778, 11778},				{11780, 11780},				{11785, 11785},
	{11788, 11788},				{11804, 11804},				{11808, 11808},
};
template<> const interval<char32> CategoryDef<Pi>::r32[] = {{0,0}};
template<> const interval<char16> CategoryDef<Po>::r16[] = {
	{33, 35},					{37, 39},					{42, 42},					{44, 44},					{46, 47},					{58, 59},					{63, 64},					{92, 92},
	{161, 161},					{167, 167},					{182, 183},					{191, 191},					{894, 894},					{903, 903},					{1370, 1375},				{1417, 1417},
	{1472, 1472},				{1475, 1475},				{1478, 1478},				{1523, 1524},				{1545, 1546},				{1548, 1549},				{1563, 1563},				{1566, 1567},
	{1642, 1645},				{1748, 1748},				{1792, 1805},				{2039, 2041},				{2096, 2110},				{2142, 2142},				{2404, 2405},				{2416, 2416},
	{2557, 2557},				{2800, 2800},				{3572, 3572},				{3663, 3663},				{3674, 3675},				{3844, 3858},				{3860, 3860},				{3973, 3973},
	{4048, 4052},				{4057, 4058},				{4170, 4175},				{4347, 4347},				{4960, 4968},				{5741, 5742},				{5867, 5869},				{5941, 5942},
	{6100, 6102},				{6104, 6106},				{6144, 6149},				{6151, 6154},				{6468, 6469},				{6686, 6687},				{6816, 6822},				{6824, 6829},
	{7002, 7008},				{7164, 7167},				{7227, 7231},				{7294, 7295},				{7360, 7367},				{7379, 7379},				{8214, 8215},				{8224, 8231},
	{8240, 8248},				{8251, 8254},				{8257, 8259},				{8263, 8273},				{8275, 8275},				{8277, 8286},				{11513, 11516},				{11518, 11519},
	{11632, 11632},				{11776, 11777},				{11782, 11784},				{11787, 11787},				{11790, 11798},				{11800, 11801},				{11803, 11803},				{11806, 11807},
	{11818, 11822},				{11824, 11833},				{11836, 11839},				{11841, 11841},				{11843, 11849},				{12289, 12291},				{12349, 12349},				{12539, 12539},
	{42238, 42239},				{42509, 42511},				{42611, 42611},				{42622, 42622},				{42738, 42743},				{43124, 43127},				{43214, 43215},				{43256, 43258},
	{43260, 43260},				{43310, 43311},				{43359, 43359},				{43457, 43469},				{43486, 43487},				{43612, 43615},				{43742, 43743},				{43760, 43761},
	{44011, 44011},				{65040, 65046},				{65049, 65049},				{65072, 65072},				{65093, 65094},				{65097, 65100},				{65104, 65106},				{65108, 65111},
	{65119, 65121},				{65128, 65128},				{65130, 65131},				{65281, 65283},				{65285, 65287},				{65290, 65290},				{65292, 65292},				{65294, 65295},
	{65306, 65307},				{65311, 65312},				{65340, 65340},				{65377, 65377},				{65380, 65381},
};
template<> const interval<char32> CategoryDef<Po>::r32[] = {
	{65792, 65794},				{66463, 66463},				{66512, 66512},				{66927, 66927},				{67671, 67671},				{67871, 67871},				{67903, 67903},				{68176, 68184},
	{68223, 68223},				{68336, 68342},				{68409, 68415},				{68505, 68508},				{69703, 69709},				{69819, 69820},				{69822, 69825},				{69952, 69955},
	{70004, 70005},				{70085, 70089},				{70093, 70093},				{70107, 70107},				{70109, 70111},				{70200, 70205},				{70313, 70313},				{70731, 70735},
	{70747, 70747},				{70749, 70749},				{70854, 70854},				{71105, 71127},				{71233, 71235},				{71264, 71276},				{71484, 71486},				{72255, 72262},
	{72346, 72348},				{72350, 72354},				{72769, 72773},				{72816, 72817},				{74864, 74868},				{92782, 92783},				{92917, 92917},				{92983, 92987},
	{92996, 92996},				{113823, 113823},			{121479, 121483},			{125278, 125279},
};
template<> const interval<char16> CategoryDef<Me>::r16[] = {
	{1160, 1161},				{6846, 6846},				{8413, 8416},				{8418, 8420},				{42608, 42610},
};
template<> const interval<char32> CategoryDef<Me>::r32[] = {{0,0}};
static const interval<char16> C_range16[] =	{
	{0, 31},					{127, 159},					{173, 173},					{1536, 1541},				{1564, 1564},				{1757, 1757},				{1807, 1807},				{2274, 2274},
	{6158, 6158},				{8203, 8207},				{8234, 8238},				{8288, 8292},				{8294, 8303},				{55296, 63743},				{65279, 65279},				{65529, 65531},
};
static const interval<char32> C_range32[] =	{
	{69821, 69821},				{113824, 113827},			{119155, 119162},			{917505, 917505},			{917536, 917631},			{983040, 1048573},			{1048576, 1114109},
};
template<> const interval<char16> CategoryDef<Mc>::r16[] = {
	{2307, 2307},				{2363, 2363},				{2366, 2368},				{2377, 2380},				{2382, 2383},				{2434, 2435},				{2494, 2496},				{2503, 2504},
	{2507, 2508},				{2519, 2519},				{2563, 2563},				{2622, 2624},				{2691, 2691},				{2750, 2752},				{2761, 2761},				{2763, 2764},
	{2818, 2819},				{2878, 2878},				{2880, 2880},				{2887, 2888},				{2891, 2892},				{2903, 2903},				{3006, 3007},				{3009, 3010},
	{3014, 3016},				{3018, 3020},				{3031, 3031},				{3073, 3075},				{3137, 3140},				{3202, 3203},				{3262, 3262},				{3264, 3268},
	{3271, 3272},				{3274, 3275},				{3285, 3286},				{3330, 3331},				{3390, 3392},				{3398, 3400},				{3402, 3404},				{3415, 3415},
	{3458, 3459},				{3535, 3537},				{3544, 3551},				{3570, 3571},				{3902, 3903},				{3967, 3967},				{4139, 4140},				{4145, 4145},
	{4152, 4152},				{4155, 4156},				{4182, 4183},				{4194, 4196},				{4199, 4205},				{4227, 4228},				{4231, 4236},				{4239, 4239},
	{4250, 4252},				{6070, 6070},				{6078, 6085},				{6087, 6088},				{6435, 6438},				{6441, 6443},				{6448, 6449},				{6451, 6456},
	{6681, 6682},				{6741, 6741},				{6743, 6743},				{6753, 6753},				{6755, 6756},				{6765, 6770},				{6916, 6916},				{6965, 6965},
	{6971, 6971},				{6973, 6977},				{6979, 6980},				{7042, 7042},				{7073, 7073},				{7078, 7079},				{7082, 7082},				{7143, 7143},
	{7146, 7148},				{7150, 7150},				{7154, 7155},				{7204, 7211},				{7220, 7221},				{7393, 7393},				{7410, 7411},				{7415, 7415},
	{12334, 12335},				{43043, 43044},				{43047, 43047},				{43136, 43137},				{43188, 43203},				{43346, 43347},				{43395, 43395},				{43444, 43445},
	{43450, 43451},				{43453, 43456},				{43567, 43568},				{43571, 43572},				{43597, 43597},				{43643, 43643},				{43645, 43645},				{43755, 43755},
	{43758, 43759},				{43765, 43765},				{44003, 44004},				{44006, 44007},				{44009, 44010},				{44012, 44012},
};
template<> const interval<char32> CategoryDef<Mc>::r32[] = {
	{69632, 69632},				{69634, 69634},				{69762, 69762},				{69808, 69810},				{69815, 69816},				{69932, 69932},				{70018, 70018},				{70067, 70069},
	{70079, 70080},				{70188, 70190},				{70194, 70195},				{70197, 70197},				{70368, 70370},				{70402, 70403},				{70462, 70463},				{70465, 70468},
	{70471, 70472},				{70475, 70477},				{70487, 70487},				{70498, 70499},				{70709, 70711},				{70720, 70721},				{70725, 70725},				{70832, 70834},
	{70841, 70841},				{70843, 70846},				{70849, 70849},				{71087, 71089},				{71096, 71099},				{71102, 71102},				{71216, 71218},				{71227, 71228},
	{71230, 71230},				{71340, 71340},				{71342, 71343},				{71350, 71350},				{71456, 71457},				{71462, 71462},				{72199, 72200},				{72249, 72249},
	{72279, 72280},				{72343, 72343},				{72751, 72751},				{72766, 72766},				{72873, 72873},				{72881, 72881},				{72884, 72884},				{94033, 94078},
	{119141, 119142},			{119149, 119154},
};
template<> const interval<char16> CategoryDef<Mn>::r16[] = {
	{768, 879},					{1155, 1159},				{1425, 1469},				{1471, 1471},				{1473, 1474},				{1476, 1477},				{1479, 1479},				{1552, 1562},
	{1611, 1631},				{1648, 1648},				{1750, 1756},				{1759, 1764},				{1767, 1768},				{1770, 1773},				{1809, 1809},				{1840, 1866},
	{1958, 1968},				{2027, 2035},				{2070, 2073},				{2075, 2083},				{2085, 2087},				{2089, 2093},				{2137, 2139},				{2260, 2273},
	{2275, 2306},				{2362, 2362},				{2364, 2364},				{2369, 2376},				{2381, 2381},				{2385, 2391},				{2402, 2403},				{2433, 2433},
	{2492, 2492},				{2497, 2500},				{2509, 2509},				{2530, 2531},				{2561, 2562},				{2620, 2620},				{2625, 2626},				{2631, 2632},
	{2635, 2637},				{2641, 2641},				{2672, 2673},				{2677, 2677},				{2689, 2690},				{2748, 2748},				{2753, 2757},				{2759, 2760},
	{2765, 2765},				{2786, 2787},				{2810, 2815},				{2817, 2817},				{2876, 2876},				{2879, 2879},				{2881, 2884},				{2893, 2893},
	{2902, 2902},				{2914, 2915},				{2946, 2946},				{3008, 3008},				{3021, 3021},				{3072, 3072},				{3134, 3136},				{3142, 3144},
	{3146, 3149},				{3157, 3158},				{3170, 3171},				{3201, 3201},				{3260, 3260},				{3263, 3263},				{3270, 3270},				{3276, 3277},
	{3298, 3299},				{3328, 3329},				{3387, 3388},				{3393, 3396},				{3405, 3405},				{3426, 3427},				{3530, 3530},				{3538, 3540},
	{3542, 3542},				{3633, 3633},				{3636, 3642},				{3655, 3662},				{3761, 3761},				{3764, 3769},				{3771, 3772},				{3784, 3789},
	{3864, 3865},				{3893, 3893},				{3895, 3895},				{3897, 3897},				{3953, 3966},				{3968, 3972},				{3974, 3975},				{3981, 3991},
	{3993, 4028},				{4038, 4038},				{4141, 4144},				{4146, 4151},				{4153, 4154},				{4157, 4158},				{4184, 4185},				{4190, 4192},
	{4209, 4212},				{4226, 4226},				{4229, 4230},				{4237, 4237},				{4253, 4253},				{4957, 4959},				{5906, 5908},				{5938, 5940},
	{5970, 5971},				{6002, 6003},				{6068, 6069},				{6071, 6077},				{6086, 6086},				{6089, 6099},				{6109, 6109},				{6155, 6157},
	{6277, 6278},				{6313, 6313},				{6432, 6434},				{6439, 6440},				{6450, 6450},				{6457, 6459},				{6679, 6680},				{6683, 6683},
	{6742, 6742},				{6744, 6750},				{6752, 6752},				{6754, 6754},				{6757, 6764},				{6771, 6780},				{6783, 6783},				{6832, 6845},
	{6912, 6915},				{6964, 6964},				{6966, 6970},				{6972, 6972},				{6978, 6978},				{7019, 7027},				{7040, 7041},				{7074, 7077},
	{7080, 7081},				{7083, 7085},				{7142, 7142},				{7144, 7145},				{7149, 7149},				{7151, 7153},				{7212, 7219},				{7222, 7223},
	{7376, 7378},				{7380, 7392},				{7394, 7400},				{7405, 7405},				{7412, 7412},				{7416, 7417},				{7616, 7673},				{7675, 7679},
	{8400, 8412},				{8417, 8417},				{8421, 8432},				{11503, 11505},				{11647, 11647},				{11744, 11775},				{12330, 12333},				{12441, 12442},
	{42607, 42607},				{42612, 42621},				{42654, 42655},				{42736, 42737},				{43010, 43010},				{43014, 43014},				{43019, 43019},				{43045, 43046},
	{43204, 43205},				{43232, 43249},				{43302, 43309},				{43335, 43345},				{43392, 43394},				{43443, 43443},				{43446, 43449},				{43452, 43452},
	{43493, 43493},				{43561, 43566},				{43569, 43570},				{43573, 43574},				{43587, 43587},				{43596, 43596},				{43644, 43644},				{43696, 43696},
	{43698, 43700},				{43703, 43704},				{43710, 43711},				{43713, 43713},				{43756, 43757},				{43766, 43766},				{44005, 44005},				{44008, 44008},
	{44013, 44013},				{64286, 64286},				{65024, 65039},				{65056, 65071},
};
template<> const interval<char32> CategoryDef<Mn>::r32[] = {
	{66045, 66045},				{66272, 66272},				{66422, 66426},				{68097, 68099},				{68101, 68102},				{68108, 68111},				{68152, 68154},				{68159, 68159},
	{68325, 68326},				{69633, 69633},				{69688, 69702},				{69759, 69761},				{69811, 69814},				{69817, 69818},				{69888, 69890},				{69927, 69931},
	{69933, 69940},				{70003, 70003},				{70016, 70017},				{70070, 70078},				{70090, 70092},				{70191, 70193},				{70196, 70196},				{70198, 70199},
	{70206, 70206},				{70367, 70367},				{70371, 70378},				{70400, 70401},				{70460, 70460},				{70464, 70464},				{70502, 70508},				{70512, 70516},
	{70712, 70719},				{70722, 70724},				{70726, 70726},				{70835, 70840},				{70842, 70842},				{70847, 70848},				{70850, 70851},				{71090, 71093},
	{71100, 71101},				{71103, 71104},				{71132, 71133},				{71219, 71226},				{71229, 71229},				{71231, 71232},				{71339, 71339},				{71341, 71341},
	{71344, 71349},				{71351, 71351},				{71453, 71455},				{71458, 71461},				{71463, 71467},				{72193, 72198},				{72201, 72202},				{72243, 72248},
	{72251, 72254},				{72263, 72263},				{72273, 72278},				{72281, 72283},				{72330, 72342},				{72344, 72345},				{72752, 72758},				{72760, 72765},
	{72767, 72767},				{72850, 72871},				{72874, 72880},				{72882, 72883},				{72885, 72886},				{73009, 73014},				{73018, 73018},				{73020, 73021},
	{73023, 73029},				{73031, 73031},				{92912, 92916},				{92976, 92982},				{94095, 94098},				{113821, 113822},			{119143, 119145},			{119163, 119170},
	{119173, 119179},			{119210, 119213},			{119362, 119364},			{121344, 121398},			{121403, 121452},			{121461, 121461},			{121476, 121476},			{121499, 121503},
	{121505, 121519},			{122880, 122886},			{122888, 122904},			{122907, 122913},			{122915, 122916},			{122918, 122922},			{125136, 125142},			{125252, 125258},
	{917760, 917999},
};
static const interval<char16> M_range16[] =	{
	{768, 879},					{1155, 1161},				{1425, 1469},				{1471, 1471},				{1473, 1474},				{1476, 1477},				{1479, 1479},				{1552, 1562},
	{1611, 1631},				{1648, 1648},				{1750, 1756},				{1759, 1764},				{1767, 1768},				{1770, 1773},				{1809, 1809},				{1840, 1866},
	{1958, 1968},				{2027, 2035},				{2070, 2073},				{2075, 2083},				{2085, 2087},				{2089, 2093},				{2137, 2139},				{2260, 2273},
	{2275, 2307},				{2362, 2364},				{2366, 2383},				{2385, 2391},				{2402, 2403},				{2433, 2435},				{2492, 2492},				{2494, 2500},
	{2503, 2504},				{2507, 2509},				{2519, 2519},				{2530, 2531},				{2561, 2563},				{2620, 2620},				{2622, 2626},				{2631, 2632},
	{2635, 2637},				{2641, 2641},				{2672, 2673},				{2677, 2677},				{2689, 2691},				{2748, 2748},				{2750, 2757},				{2759, 2761},
	{2763, 2765},				{2786, 2787},				{2810, 2815},				{2817, 2819},				{2876, 2876},				{2878, 2884},				{2887, 2888},				{2891, 2893},
	{2902, 2903},				{2914, 2915},				{2946, 2946},				{3006, 3010},				{3014, 3016},				{3018, 3021},				{3031, 3031},				{3072, 3075},
	{3134, 3140},				{3142, 3144},				{3146, 3149},				{3157, 3158},				{3170, 3171},				{3201, 3203},				{3260, 3260},				{3262, 3268},
	{3270, 3272},				{3274, 3277},				{3285, 3286},				{3298, 3299},				{3328, 3331},				{3387, 3388},				{3390, 3396},				{3398, 3400},
	{3402, 3405},				{3415, 3415},				{3426, 3427},				{3458, 3459},				{3530, 3530},				{3535, 3540},				{3542, 3542},				{3544, 3551},
	{3570, 3571},				{3633, 3633},				{3636, 3642},				{3655, 3662},				{3761, 3761},				{3764, 3769},				{3771, 3772},				{3784, 3789},
	{3864, 3865},				{3893, 3893},				{3895, 3895},				{3897, 3897},				{3902, 3903},				{3953, 3972},				{3974, 3975},				{3981, 3991},
	{3993, 4028},				{4038, 4038},				{4139, 4158},				{4182, 4185},				{4190, 4192},				{4194, 4196},				{4199, 4205},				{4209, 4212},
	{4226, 4237},				{4239, 4239},				{4250, 4253},				{4957, 4959},				{5906, 5908},				{5938, 5940},				{5970, 5971},				{6002, 6003},
	{6068, 6099},				{6109, 6109},				{6155, 6157},				{6277, 6278},				{6313, 6313},				{6432, 6443},				{6448, 6459},				{6679, 6683},
	{6741, 6750},				{6752, 6780},				{6783, 6783},				{6832, 6846},				{6912, 6916},				{6964, 6980},				{7019, 7027},				{7040, 7042},
	{7073, 7085},				{7142, 7155},				{7204, 7223},				{7376, 7378},				{7380, 7400},				{7405, 7405},				{7410, 7412},				{7415, 7417},
	{7616, 7673},				{7675, 7679},				{8400, 8432},				{11503, 11505},				{11647, 11647},				{11744, 11775},				{12330, 12335},				{12441, 12442},
	{42607, 42610},				{42612, 42621},				{42654, 42655},				{42736, 42737},				{43010, 43010},				{43014, 43014},				{43019, 43019},				{43043, 43047},
	{43136, 43137},				{43188, 43205},				{43232, 43249},				{43302, 43309},				{43335, 43347},				{43392, 43395},				{43443, 43456},				{43493, 43493},
	{43561, 43574},				{43587, 43587},				{43596, 43597},				{43643, 43645},				{43696, 43696},				{43698, 43700},				{43703, 43704},				{43710, 43711},
	{43713, 43713},				{43755, 43759},				{43765, 43766},				{44003, 44010},				{44012, 44013},				{64286, 64286},				{65024, 65039},				{65056, 65071},
};
static const interval<char32> M_range32[] =	{
	{66045, 66045},				{66272, 66272},				{66422, 66426},				{68097, 68099},				{68101, 68102},				{68108, 68111},				{68152, 68154},				{68159, 68159},
	{68325, 68326},				{69632, 69634},				{69688, 69702},				{69759, 69762},				{69808, 69818},				{69888, 69890},				{69927, 69940},				{70003, 70003},
	{70016, 70018},				{70067, 70080},				{70090, 70092},				{70188, 70199},				{70206, 70206},				{70367, 70378},				{70400, 70403},				{70460, 70460},
	{70462, 70468},				{70471, 70472},				{70475, 70477},				{70487, 70487},				{70498, 70499},				{70502, 70508},				{70512, 70516},				{70709, 70726},
	{70832, 70851},				{71087, 71093},				{71096, 71104},				{71132, 71133},				{71216, 71232},				{71339, 71351},				{71453, 71467},				{72193, 72202},
	{72243, 72249},				{72251, 72254},				{72263, 72263},				{72273, 72283},				{72330, 72345},				{72751, 72758},				{72760, 72767},				{72850, 72871},
	{72873, 72886},				{73009, 73014},				{73018, 73018},				{73020, 73021},				{73023, 73029},				{73031, 73031},				{92912, 92916},				{92976, 92982},
	{94033, 94078},				{94095, 94098},				{113821, 113822},			{119141, 119145},			{119149, 119154},			{119163, 119170},			{119173, 119179},			{119210, 119213},
	{119362, 119364},			{121344, 121398},			{121403, 121452},			{121461, 121461},			{121476, 121476},			{121499, 121503},			{121505, 121519},			{122880, 122886},
	{122888, 122904},			{122907, 122913},			{122915, 122916},			{122918, 122922},			{125136, 125142},			{125252, 125258},			{917760, 917999},
};
static const interval<char16> L_range16[] =	{
	{65, 90},					{97, 122},					{170, 170},					{181, 181},					{186, 186},					{192, 214},					{216, 246},					{248, 705},
	{710, 721},					{736, 740},					{748, 748},					{750, 750},					{880, 884},					{886, 887},					{890, 893},					{895, 895},
	{902, 902},					{904, 906},					{908, 908},					{910, 929},					{931, 1013},				{1015, 1153},				{1162, 1327},				{1329, 1366},
	{1369, 1369},				{1377, 1415},				{1488, 1514},				{1520, 1522},				{1568, 1610},				{1646, 1647},				{1649, 1747},				{1749, 1749},
	{1765, 1766},				{1774, 1775},				{1786, 1788},				{1791, 1791},				{1808, 1808},				{1810, 1839},				{1869, 1957},				{1969, 1969},
	{1994, 2026},				{2036, 2037},				{2042, 2042},				{2048, 2069},				{2074, 2074},				{2084, 2084},				{2088, 2088},				{2112, 2136},
	{2144, 2154},				{2208, 2228},				{2230, 2237},				{2308, 2361},				{2365, 2365},				{2384, 2384},				{2392, 2401},				{2417, 2432},
	{2437, 2444},				{2447, 2448},				{2451, 2472},				{2474, 2480},				{2482, 2482},				{2486, 2489},				{2493, 2493},				{2510, 2510},
	{2524, 2525},				{2527, 2529},				{2544, 2545},				{2556, 2556},				{2565, 2570},				{2575, 2576},				{2579, 2600},				{2602, 2608},
	{2610, 2611},				{2613, 2614},				{2616, 2617},				{2649, 2652},				{2654, 2654},				{2674, 2676},				{2693, 2701},				{2703, 2705},
	{2707, 2728},				{2730, 2736},				{2738, 2739},				{2741, 2745},				{2749, 2749},				{2768, 2768},				{2784, 2785},				{2809, 2809},
	{2821, 2828},				{2831, 2832},				{2835, 2856},				{2858, 2864},				{2866, 2867},				{2869, 2873},				{2877, 2877},				{2908, 2909},
	{2911, 2913},				{2929, 2929},				{2947, 2947},				{2949, 2954},				{2958, 2960},				{2962, 2965},				{2969, 2970},				{2972, 2972},
	{2974, 2975},				{2979, 2980},				{2984, 2986},				{2990, 3001},				{3024, 3024},				{3077, 3084},				{3086, 3088},				{3090, 3112},
	{3114, 3129},				{3133, 3133},				{3160, 3162},				{3168, 3169},				{3200, 3200},				{3205, 3212},				{3214, 3216},				{3218, 3240},
	{3242, 3251},				{3253, 3257},				{3261, 3261},				{3294, 3294},				{3296, 3297},				{3313, 3314},				{3333, 3340},				{3342, 3344},
	{3346, 3386},				{3389, 3389},				{3406, 3406},				{3412, 3414},				{3423, 3425},				{3450, 3455},				{3461, 3478},				{3482, 3505},
	{3507, 3515},				{3517, 3517},				{3520, 3526},				{3585, 3632},				{3634, 3635},				{3648, 3654},				{3713, 3714},				{3716, 3716},
	{3719, 3720},				{3722, 3722},				{3725, 3725},				{3732, 3735},				{3737, 3743},				{3745, 3747},				{3749, 3749},				{3751, 3751},
	{3754, 3755},				{3757, 3760},				{3762, 3763},				{3773, 3773},				{3776, 3780},				{3782, 3782},				{3804, 3807},				{3840, 3840},
	{3904, 3911},				{3913, 3948},				{3976, 3980},				{4096, 4138},				{4159, 4159},				{4176, 4181},				{4186, 4189},				{4193, 4193},
	{4197, 4198},				{4206, 4208},				{4213, 4225},				{4238, 4238},				{4256, 4293},				{4295, 4295},				{4301, 4301},				{4304, 4346},
	{4348, 4680},				{4682, 4685},				{4688, 4694},				{4696, 4696},				{4698, 4701},				{4704, 4744},				{4746, 4749},				{4752, 4784},
	{4786, 4789},				{4792, 4798},				{4800, 4800},				{4802, 4805},				{4808, 4822},				{4824, 4880},				{4882, 4885},				{4888, 4954},
	{4992, 5007},				{5024, 5109},				{5112, 5117},				{5121, 5740},				{5743, 5759},				{5761, 5786},				{5792, 5866},				{5873, 5880},
	{5888, 5900},				{5902, 5905},				{5920, 5937},				{5952, 5969},				{5984, 5996},				{5998, 6000},				{6016, 6067},				{6103, 6103},
	{6108, 6108},				{6176, 6263},				{6272, 6276},				{6279, 6312},				{6314, 6314},				{6320, 6389},				{6400, 6430},				{6480, 6509},
	{6512, 6516},				{6528, 6571},				{6576, 6601},				{6656, 6678},				{6688, 6740},				{6823, 6823},				{6917, 6963},				{6981, 6987},
	{7043, 7072},				{7086, 7087},				{7098, 7141},				{7168, 7203},				{7245, 7247},				{7258, 7293},				{7296, 7304},				{7401, 7404},
	{7406, 7409},				{7413, 7414},				{7424, 7615},				{7680, 7957},				{7960, 7965},				{7968, 8005},				{8008, 8013},				{8016, 8023},
	{8025, 8025},				{8027, 8027},				{8029, 8029},				{8031, 8061},				{8064, 8116},				{8118, 8124},				{8126, 8126},				{8130, 8132},
	{8134, 8140},				{8144, 8147},				{8150, 8155},				{8160, 8172},				{8178, 8180},				{8182, 8188},				{8305, 8305},				{8319, 8319},
	{8336, 8348},				{8450, 8450},				{8455, 8455},				{8458, 8467},				{8469, 8469},				{8473, 8477},				{8484, 8484},				{8486, 8486},
	{8488, 8488},				{8490, 8493},				{8495, 8505},				{8508, 8511},				{8517, 8521},				{8526, 8526},				{8579, 8580},				{11264, 11310},
	{11312, 11358},				{11360, 11492},				{11499, 11502},				{11506, 11507},				{11520, 11557},				{11559, 11559},				{11565, 11565},				{11568, 11623},
	{11631, 11631},				{11648, 11670},				{11680, 11686},				{11688, 11694},				{11696, 11702},				{11704, 11710},				{11712, 11718},				{11720, 11726},
	{11728, 11734},				{11736, 11742},				{11823, 11823},				{12293, 12294},				{12337, 12341},				{12347, 12348},				{12353, 12438},				{12445, 12447},
	{12449, 12538},				{12540, 12543},				{12549, 12590},				{12593, 12686},				{12704, 12730},				{12784, 12799},				{13312, 19893},				{19968, 40938},
	{40960, 42124},				{42192, 42237},				{42240, 42508},				{42512, 42527},				{42538, 42539},				{42560, 42606},				{42623, 42653},				{42656, 42725},
	{42775, 42783},				{42786, 42888},				{42891, 42926},				{42928, 42935},				{42999, 43009},				{43011, 43013},				{43015, 43018},				{43020, 43042},
	{43072, 43123},				{43138, 43187},				{43250, 43255},				{43259, 43259},				{43261, 43261},				{43274, 43301},				{43312, 43334},				{43360, 43388},
	{43396, 43442},				{43471, 43471},				{43488, 43492},				{43494, 43503},				{43514, 43518},				{43520, 43560},				{43584, 43586},				{43588, 43595},
	{43616, 43638},				{43642, 43642},				{43646, 43695},				{43697, 43697},				{43701, 43702},				{43705, 43709},				{43712, 43712},				{43714, 43714},
	{43739, 43741},				{43744, 43754},				{43762, 43764},				{43777, 43782},				{43785, 43790},				{43793, 43798},				{43808, 43814},				{43816, 43822},
	{43824, 43866},				{43868, 43877},				{43888, 44002},				{44032, 55203},				{55216, 55238},				{55243, 55291},				{63744, 64109},				{64112, 64217},
	{64256, 64262},				{64275, 64279},				{64285, 64285},				{64287, 64296},				{64298, 64310},				{64312, 64316},				{64318, 64318},				{64320, 64321},
	{64323, 64324},				{64326, 64433},				{64467, 64829},				{64848, 64911},				{64914, 64967},				{65008, 65019},				{65136, 65140},				{65142, 65276},
	{65313, 65338},				{65345, 65370},				{65382, 65470},				{65474, 65479},				{65482, 65487},				{65490, 65495},				{65498, 65500},
};
static const interval<char32> L_range32[] =	{
	{65536, 65547},				{65549, 65574},				{65576, 65594},				{65596, 65597},				{65599, 65613},				{65616, 65629},				{65664, 65786},				{66176, 66204},
	{66208, 66256},				{66304, 66335},				{66349, 66368},				{66370, 66377},				{66384, 66421},				{66432, 66461},				{66464, 66499},				{66504, 66511},
	{66560, 66717},				{66736, 66771},				{66776, 66811},				{66816, 66855},				{66864, 66915},				{67072, 67382},				{67392, 67413},				{67424, 67431},
	{67584, 67589},				{67592, 67592},				{67594, 67637},				{67639, 67640},				{67644, 67644},				{67647, 67669},				{67680, 67702},				{67712, 67742},
	{67808, 67826},				{67828, 67829},				{67840, 67861},				{67872, 67897},				{67968, 68023},				{68030, 68031},				{68096, 68096},				{68112, 68115},
	{68117, 68119},				{68121, 68147},				{68192, 68220},				{68224, 68252},				{68288, 68295},				{68297, 68324},				{68352, 68405},				{68416, 68437},
	{68448, 68466},				{68480, 68497},				{68608, 68680},				{68736, 68786},				{68800, 68850},				{69635, 69687},				{69763, 69807},				{69840, 69864},
	{69891, 69926},				{69968, 70002},				{70006, 70006},				{70019, 70066},				{70081, 70084},				{70106, 70106},				{70108, 70108},				{70144, 70161},
	{70163, 70187},				{70272, 70278},				{70280, 70280},				{70282, 70285},				{70287, 70301},				{70303, 70312},				{70320, 70366},				{70405, 70412},
	{70415, 70416},				{70419, 70440},				{70442, 70448},				{70450, 70451},				{70453, 70457},				{70461, 70461},				{70480, 70480},				{70493, 70497},
	{70656, 70708},				{70727, 70730},				{70784, 70831},				{70852, 70853},				{70855, 70855},				{71040, 71086},				{71128, 71131},				{71168, 71215},
	{71236, 71236},				{71296, 71338},				{71424, 71449},				{71840, 71903},				{71935, 71935},				{72192, 72192},				{72203, 72242},				{72250, 72250},
	{72272, 72272},				{72284, 72323},				{72326, 72329},				{72384, 72440},				{72704, 72712},				{72714, 72750},				{72768, 72768},				{72818, 72847},
	{72960, 72966},				{72968, 72969},				{72971, 73008},				{73030, 73030},				{73728, 74649},				{74880, 75075},				{77824, 78894},				{82944, 83526},
	{92160, 92728},				{92736, 92766},				{92880, 92909},				{92928, 92975},				{92992, 92995},				{93027, 93047},				{93053, 93071},				{93952, 94020},
	{94032, 94032},				{94099, 94111},				{94176, 94177},				{94208, 100332},			{100352, 101106},			{110592, 110878},			{110960, 111355},			{113664, 113770},
	{113776, 113788},			{113792, 113800},			{113808, 113817},			{119808, 119892},			{119894, 119964},			{119966, 119967},			{119970, 119970},			{119973, 119974},
	{119977, 119980},			{119982, 119993},			{119995, 119995},			{119997, 120003},			{120005, 120069},			{120071, 120074},			{120077, 120084},			{120086, 120092},
	{120094, 120121},			{120123, 120126},			{120128, 120132},			{120134, 120134},			{120138, 120144},			{120146, 120485},			{120488, 120512},			{120514, 120538},
	{120540, 120570},			{120572, 120596},			{120598, 120628},			{120630, 120654},			{120656, 120686},			{120688, 120712},			{120714, 120744},			{120746, 120770},
	{120772, 120779},			{124928, 125124},			{125184, 125251},			{126464, 126467},			{126469, 126495},			{126497, 126498},			{126500, 126500},			{126503, 126503},
	{126505, 126514},			{126516, 126519},			{126521, 126521},			{126523, 126523},			{126530, 126530},			{126535, 126535},			{126537, 126537},			{126539, 126539},
	{126541, 126543},			{126545, 126546},			{126548, 126548},			{126551, 126551},			{126553, 126553},			{126555, 126555},			{126557, 126557},			{126559, 126559},
	{126561, 126562},			{126564, 126564},			{126567, 126570},			{126572, 126578},			{126580, 126583},			{126585, 126588},			{126590, 126590},			{126592, 126601},
	{126603, 126619},			{126625, 126627},			{126629, 126633},			{126635, 126651},			{131072, 173782},			{173824, 177972},			{177984, 178205},			{178208, 183969},
	{183984, 191456},			{194560, 195101},
};
static const interval<char16> N_range16[] =	{
	{48, 57},					{178, 179},					{185, 185},					{188, 190},					{1632, 1641},				{1776, 1785},				{1984, 1993},				{2406, 2415},
	{2534, 2543},				{2548, 2553},				{2662, 2671},				{2790, 2799},				{2918, 2927},				{2930, 2935},				{3046, 3058},				{3174, 3183},
	{3192, 3198},				{3302, 3311},				{3416, 3422},				{3430, 3448},				{3558, 3567},				{3664, 3673},				{3792, 3801},				{3872, 3891},
	{4160, 4169},				{4240, 4249},				{4969, 4988},				{5870, 5872},				{6112, 6121},				{6128, 6137},				{6160, 6169},				{6470, 6479},
	{6608, 6618},				{6784, 6793},				{6800, 6809},				{6992, 7001},				{7088, 7097},				{7232, 7241},				{7248, 7257},				{8304, 8304},
	{8308, 8313},				{8320, 8329},				{8528, 8578},				{8581, 8585},				{9312, 9371},				{9450, 9471},				{10102, 10131},				{11517, 11517},
	{12295, 12295},				{12321, 12329},				{12344, 12346},				{12690, 12693},				{12832, 12841},				{12872, 12879},				{12881, 12895},				{12928, 12937},
	{12977, 12991},				{42528, 42537},				{42726, 42735},				{43056, 43061},				{43216, 43225},				{43264, 43273},				{43472, 43481},				{43504, 43513},
	{43600, 43609},				{44016, 44025},				{65296, 65305},
};
static const interval<char32> N_range32[] =	{
	{65799, 65843},				{65856, 65912},				{65930, 65931},				{66273, 66299},				{66336, 66339},				{66369, 66369},				{66378, 66378},				{66513, 66517},
	{66720, 66729},				{67672, 67679},				{67705, 67711},				{67751, 67759},				{67835, 67839},				{67862, 67867},				{68028, 68029},				{68032, 68047},
	{68050, 68095},				{68160, 68167},				{68221, 68222},				{68253, 68255},				{68331, 68335},				{68440, 68447},				{68472, 68479},				{68521, 68527},
	{68858, 68863},				{69216, 69246},				{69714, 69743},				{69872, 69881},				{69942, 69951},				{70096, 70105},				{70113, 70132},				{70384, 70393},
	{70736, 70745},				{70864, 70873},				{71248, 71257},				{71360, 71369},				{71472, 71483},				{71904, 71922},				{72784, 72812},				{73040, 73049},
	{74752, 74862},				{92768, 92777},				{93008, 93017},				{93019, 93025},				{119648, 119665},			{120782, 120831},			{125127, 125135},			{125264, 125273},
	{127232, 127244},
};
template<> const interval<char16> CategoryDef<Sk>::r16[] = {
	{94, 94},					{96, 96},					{168, 168},					{175, 175},					{180, 180},					{184, 184},					{706, 709},					{722, 735},
	{741, 747},					{749, 749},					{751, 767},					{885, 885},					{900, 901},					{8125, 8125},				{8127, 8129},				{8141, 8143},
	{8157, 8159},				{8173, 8175},				{8189, 8190},				{12443, 12444},				{42752, 42774},				{42784, 42785},				{42889, 42890},				{43867, 43867},
	{64434, 64449},				{65342, 65342},				{65344, 65344},				{65507, 65507},
};
template<> const interval<char32> CategoryDef<Sk>::r32[] = {
	{127995, 127999},
};
static const interval<char16> P_range16[] =	{
	{33, 35},					{37, 42},					{44, 47},					{58, 59},					{63, 64},					{91, 93},					{95, 95},					{123, 123},
	{125, 125},					{161, 161},					{167, 167},					{171, 171},					{182, 183},					{187, 187},					{191, 191},					{894, 894},
	{903, 903},					{1370, 1375},				{1417, 1418},				{1470, 1470},				{1472, 1472},				{1475, 1475},				{1478, 1478},				{1523, 1524},
	{1545, 1546},				{1548, 1549},				{1563, 1563},				{1566, 1567},				{1642, 1645},				{1748, 1748},				{1792, 1805},				{2039, 2041},
	{2096, 2110},				{2142, 2142},				{2404, 2405},				{2416, 2416},				{2557, 2557},				{2800, 2800},				{3572, 3572},				{3663, 3663},
	{3674, 3675},				{3844, 3858},				{3860, 3860},				{3898, 3901},				{3973, 3973},				{4048, 4052},				{4057, 4058},				{4170, 4175},
	{4347, 4347},				{4960, 4968},				{5120, 5120},				{5741, 5742},				{5787, 5788},				{5867, 5869},				{5941, 5942},				{6100, 6102},
	{6104, 6106},				{6144, 6154},				{6468, 6469},				{6686, 6687},				{6816, 6822},				{6824, 6829},				{7002, 7008},				{7164, 7167},
	{7227, 7231},				{7294, 7295},				{7360, 7367},				{7379, 7379},				{8208, 8231},				{8240, 8259},				{8261, 8273},				{8275, 8286},
	{8317, 8318},				{8333, 8334},				{8968, 8971},				{9001, 9002},				{10088, 10101},				{10181, 10182},				{10214, 10223},				{10627, 10648},
	{10712, 10715},				{10748, 10749},				{11513, 11516},				{11518, 11519},				{11632, 11632},				{11776, 11822},				{11824, 11849},				{12289, 12291},
	{12296, 12305},				{12308, 12319},				{12336, 12336},				{12349, 12349},				{12448, 12448},				{12539, 12539},				{42238, 42239},				{42509, 42511},
	{42611, 42611},				{42622, 42622},				{42738, 42743},				{43124, 43127},				{43214, 43215},				{43256, 43258},				{43260, 43260},				{43310, 43311},
	{43359, 43359},				{43457, 43469},				{43486, 43487},				{43612, 43615},				{43742, 43743},				{43760, 43761},				{44011, 44011},				{64830, 64831},
	{65040, 65049},				{65072, 65106},				{65108, 65121},				{65123, 65123},				{65128, 65128},				{65130, 65131},				{65281, 65283},				{65285, 65290},
	{65292, 65295},				{65306, 65307},				{65311, 65312},				{65339, 65341},				{65343, 65343},				{65371, 65371},				{65373, 65373},				{65375, 65381},
};
static const interval<char32> P_range32[] =	{
	{65792, 65794},				{66463, 66463},				{66512, 66512},				{66927, 66927},				{67671, 67671},				{67871, 67871},				{67903, 67903},				{68176, 68184},
	{68223, 68223},				{68336, 68342},				{68409, 68415},				{68505, 68508},				{69703, 69709},				{69819, 69820},				{69822, 69825},				{69952, 69955},
	{70004, 70005},				{70085, 70089},				{70093, 70093},				{70107, 70107},				{70109, 70111},				{70200, 70205},				{70313, 70313},				{70731, 70735},
	{70747, 70747},				{70749, 70749},				{70854, 70854},				{71105, 71127},				{71233, 71235},				{71264, 71276},				{71484, 71486},				{72255, 72262},
	{72346, 72348},				{72350, 72354},				{72769, 72773},				{72816, 72817},				{74864, 74868},				{92782, 92783},				{92917, 92917},				{92983, 92987},
	{92996, 92996},				{113823, 113823},			{121479, 121483},			{125278, 125279},
};
static const interval<char16> S_range16[] =	{
	{36, 36},					{43, 43},					{60, 62},					{94, 94},					{96, 96},					{124, 124},					{126, 126},					{162, 166},
	{168, 169},					{172, 172},					{174, 177},					{180, 180},					{184, 184},					{215, 215},					{247, 247},					{706, 709},
	{722, 735},					{741, 747},					{749, 749},					{751, 767},					{885, 885},					{900, 901},					{1014, 1014},				{1154, 1154},
	{1421, 1423},				{1542, 1544},				{1547, 1547},				{1550, 1551},				{1758, 1758},				{1769, 1769},				{1789, 1790},				{2038, 2038},
	{2546, 2547},				{2554, 2555},				{2801, 2801},				{2928, 2928},				{3059, 3066},				{3199, 3199},				{3407, 3407},				{3449, 3449},
	{3647, 3647},				{3841, 3843},				{3859, 3859},				{3861, 3863},				{3866, 3871},				{3892, 3892},				{3894, 3894},				{3896, 3896},
	{4030, 4037},				{4039, 4044},				{4046, 4047},				{4053, 4056},				{4254, 4255},				{5008, 5017},				{6107, 6107},				{6464, 6464},
	{6622, 6655},				{7009, 7018},				{7028, 7036},				{8125, 8125},				{8127, 8129},				{8141, 8143},				{8157, 8159},				{8173, 8175},
	{8189, 8190},				{8260, 8260},				{8274, 8274},				{8314, 8316},				{8330, 8332},				{8352, 8383},				{8448, 8449},				{8451, 8454},
	{8456, 8457},				{8468, 8468},				{8470, 8472},				{8478, 8483},				{8485, 8485},				{8487, 8487},				{8489, 8489},				{8494, 8494},
	{8506, 8507},				{8512, 8516},				{8522, 8525},				{8527, 8527},				{8586, 8587},				{8592, 8967},				{8972, 9000},				{9003, 9254},
	{9280, 9290},				{9372, 9449},				{9472, 10087},				{10132, 10180},				{10183, 10213},				{10224, 10626},				{10649, 10711},				{10716, 10747},
	{10750, 11123},				{11126, 11157},				{11160, 11193},				{11197, 11208},				{11210, 11218},				{11244, 11247},				{11493, 11498},				{11904, 11929},
	{11931, 12019},				{12032, 12245},				{12272, 12283},				{12292, 12292},				{12306, 12307},				{12320, 12320},				{12342, 12343},				{12350, 12351},
	{12443, 12444},				{12688, 12689},				{12694, 12703},				{12736, 12771},				{12800, 12830},				{12842, 12871},				{12880, 12880},				{12896, 12927},
	{12938, 12976},				{12992, 13054},				{13056, 13311},				{19904, 19967},				{42128, 42182},				{42752, 42774},				{42784, 42785},				{42889, 42890},
	{43048, 43051},				{43062, 43065},				{43639, 43641},				{43867, 43867},				{64297, 64297},				{64434, 64449},				{65020, 65021},				{65122, 65122},
	{65124, 65126},				{65129, 65129},				{65284, 65284},				{65291, 65291},				{65308, 65310},				{65342, 65342},				{65344, 65344},				{65372, 65372},
	{65374, 65374},				{65504, 65510},				{65512, 65518},				{65532, 65533},
};
static const interval<char32> S_range32[] =	{
	{65847, 65855},				{65913, 65929},				{65932, 65934},				{65936, 65947},				{65952, 65952},				{66000, 66044},				{67703, 67704},				{68296, 68296},
	{71487, 71487},				{92988, 92991},				{92997, 92997},				{113820, 113820},			{118784, 119029},			{119040, 119078},			{119081, 119140},			{119146, 119148},
	{119171, 119172},			{119180, 119209},			{119214, 119272},			{119296, 119361},			{119365, 119365},			{119552, 119638},			{120513, 120513},			{120539, 120539},
	{120571, 120571},			{120597, 120597},			{120629, 120629},			{120655, 120655},			{120687, 120687},			{120713, 120713},			{120745, 120745},			{120771, 120771},
	{120832, 121343},			{121399, 121402},			{121453, 121460},			{121462, 121475},			{121477, 121478},			{126704, 126705},			{126976, 127019},			{127024, 127123},
	{127136, 127150},			{127153, 127167},			{127169, 127183},			{127185, 127221},			{127248, 127278},			{127280, 127339},			{127344, 127404},			{127462, 127490},
	{127504, 127547},			{127552, 127560},			{127568, 127569},			{127584, 127589},			{127744, 128724},			{128736, 128748},			{128752, 128760},			{128768, 128883},
	{128896, 128980},			{129024, 129035},			{129040, 129095},			{129104, 129113},			{129120, 129159},			{129168, 129197},			{129280, 129291},			{129296, 129342},
	{129344, 129356},			{129360, 129387},			{129408, 129431},			{129472, 129472},			{129488, 129510},
};
template<> const interval<char16> CategoryDef<So>::r16[] = {
	{166, 166},					{169, 169},					{174, 174},					{176, 176},					{1154, 1154},				{1421, 1422},				{1550, 1551},				{1758, 1758},
	{1769, 1769},				{1789, 1790},				{2038, 2038},				{2554, 2554},				{2928, 2928},				{3059, 3064},				{3066, 3066},				{3199, 3199},
	{3407, 3407},				{3449, 3449},				{3841, 3843},				{3859, 3859},				{3861, 3863},				{3866, 3871},				{3892, 3892},				{3894, 3894},
	{3896, 3896},				{4030, 4037},				{4039, 4044},				{4046, 4047},				{4053, 4056},				{4254, 4255},				{5008, 5017},				{6464, 6464},
	{6622, 6655},				{7009, 7018},				{7028, 7036},				{8448, 8449},				{8451, 8454},				{8456, 8457},				{8468, 8468},				{8470, 8471},
	{8478, 8483},				{8485, 8485},				{8487, 8487},				{8489, 8489},				{8494, 8494},				{8506, 8507},				{8522, 8522},				{8524, 8525},
	{8527, 8527},				{8586, 8587},				{8597, 8601},				{8604, 8607},				{8609, 8610},				{8612, 8613},				{8615, 8621},				{8623, 8653},
	{8656, 8657},				{8659, 8659},				{8661, 8691},				{8960, 8967},				{8972, 8991},				{8994, 9000},				{9003, 9083},				{9085, 9114},
	{9140, 9179},				{9186, 9254},				{9280, 9290},				{9372, 9449},				{9472, 9654},				{9656, 9664},				{9666, 9719},				{9728, 9838},
	{9840, 10087},				{10132, 10175},				{10240, 10495},				{11008, 11055},				{11077, 11078},				{11085, 11123},				{11126, 11157},				{11160, 11193},
	{11197, 11208},				{11210, 11218},				{11244, 11247},				{11493, 11498},				{11904, 11929},				{11931, 12019},				{12032, 12245},				{12272, 12283},
	{12292, 12292},				{12306, 12307},				{12320, 12320},				{12342, 12343},				{12350, 12351},				{12688, 12689},				{12694, 12703},				{12736, 12771},
	{12800, 12830},				{12842, 12871},				{12880, 12880},				{12896, 12927},				{12938, 12976},				{12992, 13054},				{13056, 13311},				{19904, 19967},
	{42128, 42182},				{43048, 43051},				{43062, 43063},				{43065, 43065},				{43639, 43641},				{65021, 65021},				{65508, 65508},				{65512, 65512},
	{65517, 65518},				{65532, 65533},
};
template<> const interval<char32> CategoryDef<So>::r32[] = {
	{65847, 65855},				{65913, 65929},				{65932, 65934},				{65936, 65947},				{65952, 65952},				{66000, 66044},				{67703, 67704},				{68296, 68296},
	{71487, 71487},				{92988, 92991},				{92997, 92997},				{113820, 113820},			{118784, 119029},			{119040, 119078},			{119081, 119140},			{119146, 119148},
	{119171, 119172},			{119180, 119209},			{119214, 119272},			{119296, 119361},			{119365, 119365},			{119552, 119638},			{120832, 121343},			{121399, 121402},
	{121453, 121460},			{121462, 121475},			{121477, 121478},			{126976, 127019},			{127024, 127123},			{127136, 127150},			{127153, 127167},			{127169, 127183},
	{127185, 127221},			{127248, 127278},			{127280, 127339},			{127344, 127404},			{127462, 127490},			{127504, 127547},			{127552, 127560},			{127568, 127569},
	{127584, 127589},			{127744, 127994},			{128000, 128724},			{128736, 128748},			{128752, 128760},			{128768, 128883},			{128896, 128980},			{129024, 129035},
	{129040, 129095},			{129104, 129113},			{129120, 129159},			{129168, 129197},			{129280, 129291},			{129296, 129342},			{129344, 129356},			{129360, 129387},
	{129408, 129431},			{129472, 129472},			{129488, 129510},
};
template<> const interval<char16> CategoryDef<Sm>::r16[] = {
	{43, 43},					{60, 62},					{124, 124},					{126, 126},					{172, 172},					{177, 177},					{215, 215},					{247, 247},
	{1014, 1014},				{1542, 1544},				{8260, 8260},				{8274, 8274},				{8314, 8316},				{8330, 8332},				{8472, 8472},				{8512, 8516},
	{8523, 8523},				{8592, 8596},				{8602, 8603},				{8608, 8608},				{8611, 8611},				{8614, 8614},				{8622, 8622},				{8654, 8655},
	{8658, 8658},				{8660, 8660},				{8692, 8959},				{8992, 8993},				{9084, 9084},				{9115, 9139},				{9180, 9185},				{9655, 9655},
	{9665, 9665},				{9720, 9727},				{9839, 9839},				{10176, 10180},				{10183, 10213},				{10224, 10239},				{10496, 10626},				{10649, 10711},
	{10716, 10747},				{10750, 11007},				{11056, 11076},				{11079, 11084},				{64297, 64297},				{65122, 65122},				{65124, 65126},				{65291, 65291},
	{65308, 65310},				{65372, 65372},				{65374, 65374},				{65506, 65506},				{65513, 65516},
};
template<> const interval<char32> CategoryDef<Sm>::r32[] = {
	{120513, 120513},			{120539, 120539},			{120571, 120571},			{120597, 120597},			{120629, 120629},			{120655, 120655},			{120687, 120687},			{120713, 120713},
	{120745, 120745},			{120771, 120771},			{126704, 126705},
};
template<> const interval<char16> CategoryDef<Sc>::r16[] = {
	{36, 36},					{162, 165},					{1423, 1423},				{1547, 1547},				{2546, 2547},				{2555, 2555},				{2801, 2801},				{3065, 3065},
	{3647, 3647},				{6107, 6107},				{8352, 8383},				{43064, 43064},				{65020, 65020},				{65129, 65129},				{65284, 65284},				{65504, 65505},
	{65509, 65510},
};
template<> const interval<char32> CategoryDef<Sc>::r32[] = {{0,0}};
static const interval<char16> Z_range16[] =	{
	{32, 32},					{160, 160},					{5760, 5760},				{8192, 8202},				{8232, 8233},				{8239, 8239},				{8287, 8287},				{12288, 12288},
};
template<> const interval<char16> CategoryDef<Zl>::r16[] = {
	{8232, 8232},
};
template<> const interval<char32> CategoryDef<Zl>::r32[] = {{0,0}};
template<> const interval<char16> CategoryDef<Co>::r16[] = {
	{57344, 63743},
};
template<> const interval<char32> CategoryDef<Co>::r32[] = {
	{983040, 1048573},			{1048576, 1114109},
};
template<> const interval<char16> CategoryDef<Cc>::r16[] = {
	{0, 31},					{127, 159},
};
template<> const interval<char32> CategoryDef<Cc>::r32[] = {{0,0}};
template<> const interval<char16> CategoryDef<Cf>::r16[] = {
	{173, 173},					{1536, 1541},				{1564, 1564},				{1757, 1757},				{1807, 1807},				{2274, 2274},				{6158, 6158},				{8203, 8207},
	{8234, 8238},				{8288, 8292},				{8294, 8303},				{65279, 65279},				{65529, 65531},
};
template<> const interval<char32> CategoryDef<Cf>::r32[] = {
	{69821, 69821},				{113824, 113827},			{119155, 119162},			{917505, 917505},			{917536, 917631},
};
template<> const interval<char16> CategoryDef<Cs>::r16[] = {
	{55296, 57343},
};
template<> const interval<char32> CategoryDef<Cs>::r32[] = {{0,0}};
template<> const interval<char16> CategoryDef<Zp>::r16[] = {
	{8233, 8233},
};
template<> const interval<char32> CategoryDef<Zp>::r32[] = {{0,0}};
template<> const interval<char16> CategoryDef<Zs>::r16[] = {
	{32, 32},					{160, 160},					{5760, 5760},				{8192, 8202},				{8239, 8239},				{8287, 8287},				{12288, 12288},
};
template<> const interval<char32> CategoryDef<Zs>::r32[] = {{0,0}};

template<> const interval<char16> CategoryDef<Cn>::r16[] = {{0,0}};
template<> const interval<char32> CategoryDef<Cn>::r32[] = {{0,0}};


static const interval<char32> Tangut_range32[] = {
	{94176, 94176},				{94208, 100332},			{100352, 101106},
};
static const interval<char16> Thaana_range16[] = {
	{1920, 1969},
};
static const interval<char32> Adlam_range32[] =	{
	{125184, 125258},			{125264, 125273},			{125278, 125279},
};
static const interval<char16> Telugu_range16[] = {
	{3072, 3075},				{3077, 3084},				{3086, 3088},				{3090, 3112},				{3114, 3129},				{3133, 3140},				{3142, 3144},				{3146, 3149},
	{3157, 3158},				{3160, 3162},				{3168, 3171},				{3174, 3183},				{3192, 3199},
};
static const interval<char16> Cyrillic_range16[] = {
	{1024, 1156},				{1159, 1327},				{7296, 7304},				{7467, 7467},				{7544, 7544},				{11744, 11775},				{42560, 42655},				{65070, 65071},
};
static const interval<char32> Zanabazar_Square_range32[] = {
	{72192, 72263},
};
static const interval<char16> Hangul_range16[] = {
	{4352, 4607},				{12334, 12335},				{12593, 12686},				{12800, 12830},				{12896, 12926},				{43360, 43388},				{44032, 55203},				{55216, 55238},
	{55243, 55291},				{65440, 65470},				{65474, 65479},				{65482, 65487},				{65490, 65495},				{65498, 65500},
};
static const interval<char32> Old_South_Arabian_range32[] =	{
	{68192, 68223},
};
static const interval<char16> Ethiopic_range16[] = {
	{4608, 4680},				{4682, 4685},				{4688, 4694},				{4696, 4696},				{4698, 4701},				{4704, 4744},				{4746, 4749},				{4752, 4784},
	{4786, 4789},				{4792, 4798},				{4800, 4800},				{4802, 4805},				{4808, 4822},				{4824, 4880},				{4882, 4885},				{4888, 4954},
	{4957, 4988},				{4992, 5017},				{11648, 11670},				{11680, 11686},				{11688, 11694},				{11696, 11702},				{11704, 11710},				{11712, 11718},
	{11720, 11726},				{11728, 11734},				{11736, 11742},				{43777, 43782},				{43785, 43790},				{43793, 43798},				{43808, 43814},				{43816, 43822},
};
static const interval<char16> Inherited_range16[] =	{
	{768, 879},					{1157, 1158},				{1611, 1621},				{1648, 1648},				{2385, 2386},				{6832, 6846},				{7376, 7378},				{7380, 7392},
	{7394, 7400},				{7405, 7405},				{7412, 7412},				{7416, 7417},				{7616, 7673},				{7675, 7679},				{8204, 8205},				{8400, 8432},
	{12330, 12333},				{12441, 12442},				{65024, 65039},				{65056, 65069},
};
static const interval<char32> Inherited_range32[] =	{
	{66045, 66045},				{66272, 66272},				{119143, 119145},			{119163, 119170},			{119173, 119179},			{119210, 119213},			{917760, 917999},
};
static const interval<char32> Meroitic_Cursive_range32[] = {
	{68000, 68023},				{68028, 68047},				{68050, 68095},
};
static const interval<char32> Bhaiksuki_range32[] =	{
	{72704, 72712},				{72714, 72758},				{72760, 72773},				{72784, 72812},
};
static const interval<char32> Ahom_range32[] = {
	{71424, 71449},				{71453, 71467},				{71472, 71487},
};
static const interval<char16> Han_range16[]	= {
	{11904, 11929},				{11931, 12019},				{12032, 12245},				{12293, 12293},				{12295, 12295},				{12321, 12329},				{12344, 12347},				{13312, 19893},
	{19968, 40938},				{63744, 64109},				{64112, 64217},
};
static const interval<char32> Han_range32[]	= {
	{131072, 173782},			{173824, 177972},			{177984, 178205},			{178208, 183969},			{183984, 191456},			{194560, 195101},
};
static const interval<char32> Old_North_Arabian_range32[] =	{
	{68224, 68255},
};
static const interval<char16> Armenian_range16[] = {
	{1329, 1366},				{1369, 1375},				{1377, 1415},				{1418, 1418},				{1421, 1423},				{64275, 64279},
};
static const interval<char16> Tamil_range16[] =	{
	{2946, 2947},				{2949, 2954},				{2958, 2960},				{2962, 2965},				{2969, 2970},				{2972, 2972},				{2974, 2975},				{2979, 2980},
	{2984, 2986},				{2990, 3001},				{3006, 3010},				{3014, 3016},				{3018, 3021},				{3024, 3024},				{3031, 3031},				{3046, 3066},
};
static const interval<char16> Bopomofo_range16[] = {
	{746, 747},					{12549, 12590},				{12704, 12730},
};
static const interval<char32> Bassa_Vah_range32[] =	{
	{92880, 92909},				{92912, 92917},
};
static const interval<char16> Sundanese_range16[] =	{
	{7040, 7103},				{7360, 7367},
};
static const interval<char32> Osage_range32[] =	{
	{66736, 66771},				{66776, 66811},
};
static const interval<char16> Tagalog_range16[]	= {
	{5888, 5900},				{5902, 5908},
};
static const interval<char16> Malayalam_range16[] =	{
	{3328, 3331},				{3333, 3340},				{3342, 3344},				{3346, 3396},				{3398, 3400},				{3402, 3407},				{3412, 3427},				{3430, 3455},
};
static const interval<char32> Marchen_range32[]	= {
	{72816, 72847},				{72850, 72871},				{72873, 72886},
};
static const interval<char32> Carian_range32[] = {
	{66208, 66256},
};
static const interval<char16> Hiragana_range16[] = {
	{12353, 12438},				{12445, 12447},
};
static const interval<char32> Hiragana_range32[] = {
	{110593, 110878},			{127488, 127488},
};
static const interval<char16> Tagbanwa_range16[] = {
	{5984, 5996},				{5998, 6000},				{6002, 6003},
};
static const interval<char16> Meetei_Mayek_range16[] = {
	{43744, 43766},				{43968, 44013},				{44016, 44025},
};
static const interval<char32> Pahawh_Hmong_range32[] = {
	{92928, 92997},				{93008, 93017},				{93019, 93025},				{93027, 93047},				{93053, 93071},
};
static const interval<char16> Tai_Le_range16[] = {
	{6480, 6509},				{6512, 6516},
};
static const interval<char16> Kayah_Li_range16[] = {
	{43264, 43309},				{43311, 43311},
};
static const interval<char16> Buginese_range16[] = {
	{6656, 6683},				{6686, 6687},
};
static const interval<char32> Kharoshthi_range32[] = {
	{68096, 68099},				{68101, 68102},				{68108, 68115},				{68117, 68119},				{68121, 68147},				{68152, 68154},				{68159, 68167},				{68176, 68184},
};
static const interval<char16> Tai_Tham_range16[] = {
	{6688, 6750},				{6752, 6780},				{6783, 6793},				{6800, 6809},				{6816, 6829},
};
static const interval<char32> Old_Italic_range32[] = {
	{66304, 66339},				{66349, 66351},
};
static const interval<char32> Old_Persian_range32[]	= {
	{66464, 66499},				{66504, 66517},
};
static const interval<char32> Warang_Citi_range32[]	= {
	{71840, 71922},				{71935, 71935},
};
static const interval<char16> Latin_range16[] =	{
	{65, 90},					{97, 122},					{170, 170},					{186, 186},					{192, 214},					{216, 246},					{248, 696},					{736, 740},
	{7424, 7461},				{7468, 7516},				{7522, 7525},				{7531, 7543},				{7545, 7614},				{7680, 7935},				{8305, 8305},				{8319, 8319},
	{8336, 8348},				{8490, 8491},				{8498, 8498},				{8526, 8526},				{8544, 8584},				{11360, 11391},				{42786, 42887},				{42891, 42926},
	{42928, 42935},				{42999, 43007},				{43824, 43866},				{43868, 43876},				{64256, 64262},				{65313, 65338},				{65345, 65370},
};
static const interval<char16> Saurashtra_range16[] = {
	{43136, 43205},				{43214, 43225},
};
static const interval<char32> Shavian_range32[]	= {
	{66640, 66687},
};
static const interval<char16> Georgian_range16[] = {
	{4256, 4293},				{4295, 4295},				{4301, 4301},				{4304, 4346},				{4348, 4351},				{11520, 11557},				{11559, 11559},				{11565, 11565},
};
static const interval<char32> Grantha_range32[]	= {
	{70400, 70403},				{70405, 70412},				{70415, 70416},				{70419, 70440},				{70442, 70448},				{70450, 70451},				{70453, 70457},				{70460, 70468},
	{70471, 70472},				{70475, 70477},				{70480, 70480},				{70487, 70487},				{70493, 70499},				{70502, 70508},				{70512, 70516},
};
static const interval<char32> Duployan_range32[] = {
	{113664, 113770},			{113776, 113788},			{113792, 113800},			{113808, 113817},			{113820, 113823},
};
static const interval<char16> Batak_range16[] =	{
	{7104, 7155},				{7164, 7167},
};
static const interval<char16> Devanagari_range16[] = {
	{2304, 2384},				{2387, 2403},				{2406, 2431},				{43232, 43261},
};
static const interval<char16> Thai_range16[] = {
	{3585, 3642},				{3648, 3675},
};
static const interval<char16> Tibetan_range16[]	= {
	{3840, 3911},				{3913, 3948},				{3953, 3991},				{3993, 4028},				{4030, 4044},				{4046, 4052},				{4057, 4058},
};
static const interval<char16> Tifinagh_range16[] = {
	{11568, 11623},				{11631, 11632},				{11647, 11647},
};
static const interval<char32> Ugaritic_range32[] = {
	{66432, 66461},				{66463, 66463},
};
static const interval<char16> Braille_range16[]	= {
	{10240, 10495},
};
static const interval<char32> Anatolian_Hieroglyphs_range32[] =	{
	{82944, 83526},
};
static const interval<char16> Greek_range16[] =	{
	{880, 883},					{885, 887},					{890, 893},					{895, 895},					{900, 900},					{902, 902},					{904, 906},					{908, 908},
	{910, 929},					{931, 993},					{1008, 1023},				{7462, 7466},				{7517, 7521},				{7526, 7530},				{7615, 7615},				{7936, 7957},
	{7960, 7965},				{7968, 8005},				{8008, 8013},				{8016, 8023},				{8025, 8025},				{8027, 8027},				{8029, 8029},				{8031, 8061},
	{8064, 8116},				{8118, 8132},				{8134, 8147},				{8150, 8155},				{8157, 8175},				{8178, 8180},				{8182, 8190},				{8486, 8486},
	{43877, 43877},
};
static const interval<char32> Greek_range32[] =	{
	{65856, 65934},				{65952, 65952},				{119296, 119365},
};
static const interval<char32> Lycian_range32[] = {
	{66176, 66204},
};
static const interval<char32> Mende_Kikakui_range32[] =	{
	{124928, 125124},			{125127, 125142},
};
static const interval<char16> Tai_Viet_range16[] = {
	{43648, 43714},				{43739, 43743},
};
static const interval<char16> Vai_range16[]	= {
	{42240, 42539},
};
static const interval<char16> Ogham_range16[] =	{
	{5760, 5788},
};
static const interval<char32> Inscriptional_Parthian_range32[] = {
	{68416, 68437},				{68440, 68447},
};
static const interval<char16> Cham_range16[] = {
	{43520, 43574},				{43584, 43597},				{43600, 43609},				{43612, 43615},
};
static const interval<char16> Syriac_range16[] = {
	{1792, 1805},				{1807, 1866},				{1869, 1871},				{2144, 2154},
};
static const interval<char16> Runic_range16[] =	{
	{5792, 5866},				{5870, 5880},
};
static const interval<char32> Gothic_range32[] = {
	{66352, 66378},
};
static const interval<char32> Mahajani_range32[] = {
	{69968, 70006},
};
static const interval<char16> Katakana_range16[] = {
	{12449, 12538},				{12541, 12543},				{12784, 12799},				{13008, 13054},				{13056, 13143},				{65382, 65391},				{65393, 65437},
};
static const interval<char32> Katakana_range32[] = {
	{110592, 110592},
};
static const interval<char32> Osmanya_range32[]	= {
	{66688, 66717},				{66720, 66729},
};
static const interval<char16> New_Tai_Lue_range16[]	= {
	{6528, 6571},				{6576, 6601},				{6608, 6618},				{6622, 6623},
};
static const interval<char16> Ol_Chiki_range16[] = {
	{7248, 7295},
};
static const interval<char32> Newa_range32[] = {
	{70656, 70745},				{70747, 70747},				{70749, 70749},
};
static const interval<char16> Limbu_range16[] =	{
	{6400, 6430},				{6432, 6443},				{6448, 6459},				{6464, 6464},				{6468, 6479},
};
static const interval<char32> Pau_Cin_Hau_range32[]	= {
	{72384, 72440},
};
static const interval<char16> Cherokee_range16[] = {
	{5024, 5109},				{5112, 5117},				{43888, 43967},
};
static const interval<char32> Miao_range32[] = {
	{93952, 94020},				{94032, 94078},				{94095, 94111},
};
static const interval<char16> Oriya_range16[] =	{
	{2817, 2819},				{2821, 2828},				{2831, 2832},				{2835, 2856},				{2858, 2864},				{2866, 2867},				{2869, 2873},				{2876, 2884},
	{2887, 2888},				{2891, 2893},				{2902, 2903},				{2908, 2909},				{2911, 2915},				{2918, 2935},
};
static const interval<char32> Sharada_range32[]	= {
	{70016, 70093},				{70096, 70111},
};
static const interval<char16> Gujarati_range16[] = {
	{2689, 2691},				{2693, 2701},				{2703, 2705},				{2707, 2728},				{2730, 2736},				{2738, 2739},				{2741, 2745},				{2748, 2757},
	{2759, 2761},				{2763, 2765},				{2768, 2768},				{2784, 2787},				{2790, 2801},				{2809, 2815},
};
static const interval<char32> Nushu_range32[] =	{
	{94177, 94177},				{110960, 111355},
};
static const interval<char32> Modi_range32[] = {
	{71168, 71236},				{71248, 71257},
};
static const interval<char32> Inscriptional_Pahlavi_range32[] =	{
	{68448, 68466},				{68472, 68479},
};
static const interval<char32> Manichaean_range32[] = {
	{68288, 68326},				{68331, 68342},
};
static const interval<char16> Khmer_range16[] =	{
	{6016, 6109},				{6112, 6121},				{6128, 6137},				{6624, 6655},
};
static const interval<char32> Cuneiform_range32[] =	{
	{73728, 74649},				{74752, 74862},				{74864, 74868},				{74880, 75075},
};
static const interval<char32> Khudawadi_range32[] =	{
	{70320, 70378},				{70384, 70393},
};
static const interval<char16> Mandaic_range16[]	= {
	{2112, 2139},				{2142, 2142},
};
static const interval<char32> Hatran_range32[] = {
	{67808, 67826},				{67828, 67829},				{67835, 67839},
};
static const interval<char16> Syloti_Nagri_range16[] = {
	{43008, 43051},
};
static const interval<char16> Nko_range16[]	= {
	{1984, 2042},
};
static const interval<char16> Canadian_Aboriginal_range16[]	= {
	{5120, 5759},				{6320, 6389},
};
static const interval<char32> Meroitic_Hieroglyphs_range32[] = {
	{67968, 67999},
};
static const interval<char32> Phoenician_range32[] = {
	{67840, 67867},				{67871, 67871},
};
static const interval<char32> Nabataean_range32[] =	{
	{67712, 67742},				{67751, 67759},
};
static const interval<char16> Bengali_range16[]	= {
	{2432, 2435},				{2437, 2444},				{2447, 2448},				{2451, 2472},				{2474, 2480},				{2482, 2482},				{2486, 2489},				{2492, 2500},
	{2503, 2504},				{2507, 2510},				{2519, 2519},				{2524, 2525},				{2527, 2531},				{2534, 2557},
};
static const interval<char32> Kaithi_range32[] = {
	{69760, 69825},
};
static const interval<char16> Glagolitic_range16[] = {
	{11264, 11310},				{11312, 11358},
};
static const interval<char32> Glagolitic_range32[] = {
	{122880, 122886},			{122888, 122904},			{122907, 122913},			{122915, 122916},			{122918, 122922},
};
static const interval<char32> Imperial_Aramaic_range32[] = {
	{67648, 67669},				{67671, 67679},
};
static const interval<char32> Sora_Sompeng_range32[] = {
	{69840, 69864},				{69872, 69881},
};
static const interval<char16> Gurmukhi_range16[] = {
	{2561, 2563},				{2565, 2570},				{2575, 2576},				{2579, 2600},				{2602, 2608},				{2610, 2611},				{2613, 2614},				{2616, 2617},
	{2620, 2620},				{2622, 2626},				{2631, 2632},				{2635, 2637},				{2641, 2641},				{2649, 2652},				{2654, 2654},				{2662, 2677},
};
static const interval<char16> Javanese_range16[] = {
	{43392, 43469},				{43472, 43481},				{43486, 43487},
};
static const interval<char32> Old_Permic_range32[] = {
	{66384, 66426},
};
static const interval<char16> Phags_Pa_range16[] = {
	{43072, 43127},
};
static const interval<char32> Cypriot_range32[]	= {
	{67584, 67589},				{67592, 67592},				{67594, 67637},				{67639, 67640},				{67644, 67644},				{67647, 67647},
};
static const interval<char16> Kannada_range16[]	= {
	{3200, 3203},				{3205, 3212},				{3214, 3216},				{3218, 3240},				{3242, 3251},				{3253, 3257},				{3260, 3268},				{3270, 3272},
	{3274, 3277},				{3285, 3286},				{3294, 3294},				{3296, 3299},				{3302, 3311},				{3313, 3314},
};
static const interval<char32> Khojki_range32[] = {
	{70144, 70161},				{70163, 70206},
};
static const interval<char16> Mongolian_range16[] =	{
	{6144, 6145},				{6148, 6148},				{6150, 6158},				{6160, 6169},				{6176, 6263},				{6272, 6314},
};
static const interval<char32> Mongolian_range32[] =	{
	{71264, 71276},
};
static const interval<char16> Sinhala_range16[]	= {
	{3458, 3459},				{3461, 3478},				{3482, 3505},				{3507, 3515},				{3517, 3517},				{3520, 3526},				{3530, 3530},				{3535, 3540},
	{3542, 3542},				{3544, 3551},				{3558, 3567},				{3570, 3572},
};
static const interval<char32> Sinhala_range32[]	= {
	{70113, 70132},
};
static const interval<char32> Brahmi_range32[] = {
	{69632, 69709},				{69714, 69743},				{69759, 69759},
};
static const interval<char32> Elbasan_range32[]	= {
	{66816, 66855},
};
static const interval<char32> Deseret_range32[]	= {
	{66560, 66639},
};
static const interval<char16> Rejang_range16[] = {
	{43312, 43347},				{43359, 43359},
};
static const interval<char32> SignWriting_range32[]	= {
	{120832, 121483},			{121499, 121503},			{121505, 121519},
};
static const interval<char32> Multani_range32[]	= {
	{70272, 70278},				{70280, 70280},				{70282, 70285},				{70287, 70301},				{70303, 70313},
};
const interval<char16> Yi_range16[] = {
	{40960, 42124},				{42128, 42182},
};
static const interval<char16> Balinese_range16[] = {
	{6912, 6987},				{6992, 7036},
};
static const interval<char16> Lao_range16[]	= {
	{3713, 3714},				{3716, 3716},				{3719, 3720},				{3722, 3722},				{3725, 3725},				{3732, 3735},				{3737, 3743},				{3745, 3747},
	{3749, 3749},				{3751, 3751},				{3754, 3755},				{3757, 3769},				{3771, 3773},				{3776, 3780},				{3782, 3782},				{3784, 3789},
	{3792, 3801},				{3804, 3807},
};
static const interval<char16> Hanunoo_range16[]	= {
	{5920, 5940},
};
static const interval<char32> Masaram_Gondi_range32[] =	{
	{72960, 72966},				{72968, 72969},				{72971, 73014},				{73018, 73018},				{73020, 73021},				{73023, 73031},				{73040, 73049},
};
static const interval<char32> Linear_B_range32[] = {
	{65536, 65547},				{65549, 65574},				{65576, 65594},				{65596, 65597},				{65599, 65613},				{65616, 65629},				{65664, 65786},
};
static const interval<char32> Linear_A_range32[] = {
	{67072, 67382},				{67392, 67413},				{67424, 67431},
};
static const interval<char32> Old_Turkic_range32[] = {
	{68608, 68680},
};
static const interval<char16> Lepcha_range16[] = {
	{7168, 7223},				{7227, 7241},				{7245, 7247},
};
static const interval<char32> Lydian_range32[] = {
	{67872, 67897},				{67903, 67903},
};
static const interval<char32> Egyptian_Hieroglyphs_range32[] = {
	{77824, 78894},
};
static const interval<char32> Caucasian_Albanian_range32[] = {
	{66864, 66915},				{66927, 66927},
};
static const interval<char32> Old_Hungarian_range32[] =	{
	{68736, 68786},				{68800, 68850},				{68858, 68863},
};
static const interval<char16> Samaritan_range16[] =	{
	{2048, 2093},				{2096, 2110},
};
static const interval<char16> Lisu_range16[] = {
	{42192, 42239},
};
static const interval<char16> Buhid_range16[] =	{
	{5952, 5971},
};
static const interval<char32> Palmyrene_range32[] =	{
	{67680, 67711},
};
static const interval<char32> Tirhuta_range32[]	= {
	{70784, 70855},				{70864, 70873},
};
static const interval<char32> Mro_range32[]	= {
	{92736, 92766},				{92768, 92777},				{92782, 92783},
};
static const interval<char16> Common_range16[] = {
	{0, 64},					{91, 96},					{123, 169},					{171, 185},					{187, 191},					{215, 215},					{247, 247},					{697, 735},
	{741, 745},					{748, 767},					{884, 884},					{894, 894},					{901, 901},					{903, 903},					{1417, 1417},				{1541, 1541},
	{1548, 1548},				{1563, 1563},				{1567, 1567},				{1600, 1600},				{1757, 1757},				{2274, 2274},				{2404, 2405},				{3647, 3647},
	{4053, 4056},				{4347, 4347},				{5867, 5869},				{5941, 5942},				{6146, 6147},				{6149, 6149},				{7379, 7379},				{7393, 7393},
	{7401, 7404},				{7406, 7411},				{7413, 7415},				{8192, 8203},				{8206, 8292},				{8294, 8304},				{8308, 8318},				{8320, 8334},
	{8352, 8383},				{8448, 8485},				{8487, 8489},				{8492, 8497},				{8499, 8525},				{8527, 8543},				{8585, 8587},				{8592, 9254},
	{9280, 9290},				{9312, 10239},				{10496, 11123},				{11126, 11157},				{11160, 11193},				{11197, 11208},				{11210, 11218},				{11244, 11247},
	{11776, 11849},				{12272, 12283},				{12288, 12292},				{12294, 12294},				{12296, 12320},				{12336, 12343},				{12348, 12351},				{12443, 12444},
	{12448, 12448},				{12539, 12540},				{12688, 12703},				{12736, 12771},				{12832, 12895},				{12927, 13007},				{13144, 13311},				{19904, 19967},
	{42752, 42785},				{42888, 42890},				{43056, 43065},				{43310, 43310},				{43471, 43471},				{43867, 43867},				{64830, 64831},				{65040, 65049},
	{65072, 65106},				{65108, 65126},				{65128, 65131},				{65279, 65279},				{65281, 65312},				{65339, 65344},				{65371, 65381},				{65392, 65392},
	{65438, 65439},				{65504, 65510},				{65512, 65518},				{65529, 65533},
};
static const interval<char32> Common_range32[] = {
	{65792, 65794},				{65799, 65843},				{65847, 65855},				{65936, 65947},				{66000, 66044},				{66273, 66299},				{113824, 113827},			{118784, 119029},
	{119040, 119078},			{119081, 119142},			{119146, 119162},			{119171, 119172},			{119180, 119209},			{119214, 119272},			{119552, 119638},			{119648, 119665},
	{119808, 119892},			{119894, 119964},			{119966, 119967},			{119970, 119970},			{119973, 119974},			{119977, 119980},			{119982, 119993},			{119995, 119995},
	{119997, 120003},			{120005, 120069},			{120071, 120074},			{120077, 120084},			{120086, 120092},			{120094, 120121},			{120123, 120126},			{120128, 120132},
	{120134, 120134},			{120138, 120144},			{120146, 120485},			{120488, 120779},			{120782, 120831},			{126976, 127019},			{127024, 127123},			{127136, 127150},
	{127153, 127167},			{127169, 127183},			{127185, 127221},			{127232, 127244},			{127248, 127278},			{127280, 127339},			{127344, 127404},			{127462, 127487},
	{127489, 127490},			{127504, 127547},			{127552, 127560},			{127568, 127569},			{127584, 127589},			{127744, 128724},			{128736, 128748},			{128752, 128760},
	{128768, 128883},			{128896, 128980},			{129024, 129035},			{129040, 129095},			{129104, 129113},			{129120, 129159},			{129168, 129197},			{129280, 129291},
	{129296, 129342},			{129344, 129356},			{129360, 129387},			{129408, 129431},			{129472, 129472},			{129488, 129510},			{917505, 917505},			{917536, 917631},
};
static const interval<char16> Coptic_range16[] = {
	{994, 1007},				{11392, 11507},				{11513, 11519},
};
static const interval<char32> Chakma_range32[] = {
	{69888, 69940},				{69942, 69955},
};
static const interval<char16> Arabic_range16[] = {
	{1536, 1540},				{1542, 1547},				{1549, 1562},				{1564, 1564},				{1566, 1566},				{1568, 1599},				{1601, 1610},				{1622, 1647},
	{1649, 1756},				{1758, 1791},				{1872, 1919},				{2208, 2228},				{2230, 2237},				{2260, 2273},				{2275, 2303},				{64336, 64449},
	{64467, 64829},				{64848, 64911},				{64914, 64967},				{65008, 65021},				{65136, 65140},				{65142, 65276},
};
static const interval<char32> Arabic_range32[] = {
	{69216, 69246},				{126464, 126467},			{126469, 126495},			{126497, 126498},			{126500, 126500},			{126503, 126503},			{126505, 126514},			{126516, 126519},
	{126521, 126521},			{126523, 126523},			{126530, 126530},			{126535, 126535},			{126537, 126537},			{126539, 126539},			{126541, 126543},			{126545, 126546},
	{126548, 126548},			{126551, 126551},			{126553, 126553},			{126555, 126555},			{126557, 126557},			{126559, 126559},			{126561, 126562},			{126564, 126564},
	{126567, 126570},			{126572, 126578},			{126580, 126583},			{126585, 126588},			{126590, 126590},			{126592, 126601},			{126603, 126619},			{126625, 126627},
	{126629, 126633},			{126635, 126651},			{126704, 126705},
};
static const interval<char16> Bamum_range16[] =	{
	{42656, 42743},
};
static const interval<char32> Bamum_range32[] =	{
	{92160, 92728},
};
static const interval<char16> Myanmar_range16[]	= {
	{4096, 4255},				{43488, 43518},				{43616, 43647},
};
static const interval<char32> Siddham_range32[]	= {
	{71040, 71093},				{71096, 71133},
};
static const interval<char32> Soyombo_range32[]	= {
	{72272, 72323},				{72326, 72348},				{72350, 72354},
};
static const interval<char32> Avestan_range32[]	= {
	{68352, 68405},				{68409, 68415},
};
static const interval<char16> Hebrew_range16[] = {
	{1425, 1479},				{1488, 1514},				{1520, 1524},				{64285, 64310},				{64312, 64316},				{64318, 64318},				{64320, 64321},				{64323, 64324},
	{64326, 64335},
};
static const interval<char32> Psalter_Pahlavi_range32[]	= {
	{68480, 68497},				{68505, 68508},				{68521, 68527},
};
static const interval<char32> Takri_range32[] =	{
	{71296, 71351},				{71360, 71369},
};

#define MAKEGROUP(x)	{#x, Group{x##_range16, x##_range32}}
#define MAKEGROUP16(x)	{#x, Group{x##_range16, none}}
#define MAKEGROUP32(x)	{#x, Group{none, x##_range32}}
#define MAKECATGROUP(x)	{#x, CategoryDef<x>()}

const pair<const char*, Group> unicode_groups[] = {
	MAKEGROUP32(Adlam),
	MAKEGROUP32(Ahom),
	MAKEGROUP32(Anatolian_Hieroglyphs),
	MAKEGROUP(Arabic),
	MAKEGROUP16(Armenian),
	MAKEGROUP32(Avestan),
	MAKEGROUP16(Balinese),
	MAKEGROUP(Bamum),
	MAKEGROUP32(Bassa_Vah),
	MAKEGROUP16(Batak),
	MAKEGROUP16(Bengali),
	MAKEGROUP32(Bhaiksuki),
	MAKEGROUP16(Bopomofo),
	MAKEGROUP32(Brahmi),
	MAKEGROUP16(Braille),
	MAKEGROUP16(Buginese),
	MAKEGROUP16(Buhid),
	MAKEGROUP(C),
	MAKEGROUP16(Canadian_Aboriginal),
	MAKEGROUP32(Carian),
	MAKEGROUP32(Caucasian_Albanian),
	MAKECATGROUP(Cc),
	MAKECATGROUP(Cf),
	MAKEGROUP32(Chakma),
	MAKEGROUP16(Cham),
	MAKEGROUP16(Cherokee),
	MAKECATGROUP(Co),
	MAKEGROUP(Common),
	MAKEGROUP16(Coptic),
	MAKECATGROUP(Cs),
	MAKEGROUP32(Cuneiform),
	MAKEGROUP32(Cypriot),
	MAKEGROUP16(Cyrillic),
	MAKEGROUP32(Deseret),
	MAKEGROUP16(Devanagari),
	MAKEGROUP32(Duployan),
	MAKEGROUP32(Egyptian_Hieroglyphs),
	MAKEGROUP32(Elbasan),
	MAKEGROUP16(Ethiopic),
	MAKEGROUP16(Georgian),
	MAKEGROUP(Glagolitic),
	MAKEGROUP32(Gothic),
	MAKEGROUP32(Grantha),
	MAKEGROUP(Greek),
	MAKEGROUP16(Gujarati),
	MAKEGROUP16(Gurmukhi),
	MAKEGROUP(Han),
	MAKEGROUP16(Hangul),
	MAKEGROUP16(Hanunoo),
	MAKEGROUP32(Hatran),
	MAKEGROUP16(Hebrew),
	MAKEGROUP(Hiragana),
	MAKEGROUP32(Imperial_Aramaic),
	MAKEGROUP(Inherited),
	MAKEGROUP32(Inscriptional_Pahlavi),
	MAKEGROUP32(Inscriptional_Parthian),
	MAKEGROUP16(Javanese),
	MAKEGROUP32(Kaithi),
	MAKEGROUP16(Kannada),
	MAKEGROUP(Katakana),
	MAKEGROUP16(Kayah_Li),
	MAKEGROUP32(Kharoshthi),
	MAKEGROUP16(Khmer),
	MAKEGROUP32(Khojki),
	MAKEGROUP32(Khudawadi),
	MAKEGROUP(L),
	MAKEGROUP16(Lao),
	MAKEGROUP16(Latin),
	MAKEGROUP16(Lepcha),
	MAKEGROUP16(Limbu),
	MAKEGROUP32(Linear_A),
	MAKEGROUP32(Linear_B),
	MAKEGROUP16(Lisu),
	MAKECATGROUP(Ll),
	MAKECATGROUP(Lm),
	MAKECATGROUP(Lo),
	MAKECATGROUP(Lt),
	MAKECATGROUP(Lu),
	MAKEGROUP32(Lycian),
	MAKEGROUP32(Lydian),
	MAKEGROUP(M),
	MAKEGROUP32(Mahajani),
	MAKEGROUP16(Malayalam),
	MAKEGROUP16(Mandaic),
	MAKEGROUP32(Manichaean),
	MAKEGROUP32(Marchen),
	MAKEGROUP32(Masaram_Gondi),
	MAKECATGROUP(Mc),
	MAKECATGROUP(Me),
	MAKEGROUP16(Meetei_Mayek),
	MAKEGROUP32(Mende_Kikakui),
	MAKEGROUP32(Meroitic_Cursive),
	MAKEGROUP32(Meroitic_Hieroglyphs),
	MAKEGROUP32(Miao),
	MAKECATGROUP(Mn),
	MAKEGROUP32(Modi),
	MAKEGROUP(Mongolian),
	MAKEGROUP32(Mro),
	MAKEGROUP32(Multani),
	MAKEGROUP16(Myanmar),
	MAKEGROUP(N),
	MAKEGROUP32(Nabataean),
	MAKECATGROUP(Nd),
	MAKEGROUP16(New_Tai_Lue),
	MAKEGROUP32(Newa),
	MAKEGROUP16(Nko),
	MAKECATGROUP(Nl),
	MAKECATGROUP(No),
	MAKEGROUP32(Nushu),
	MAKEGROUP16(Ogham),
	MAKEGROUP16(Ol_Chiki),
	MAKEGROUP32(Old_Hungarian),
	MAKEGROUP32(Old_Italic),
	MAKEGROUP32(Old_North_Arabian),
	MAKEGROUP32(Old_Permic),
	MAKEGROUP32(Old_Persian),
	MAKEGROUP32(Old_South_Arabian),
	MAKEGROUP32(Old_Turkic),
	MAKEGROUP16(Oriya),
	MAKEGROUP32(Osage),
	MAKEGROUP32(Osmanya),
	MAKEGROUP(P),
	MAKEGROUP32(Pahawh_Hmong),
	MAKEGROUP32(Palmyrene),
	MAKEGROUP32(Pau_Cin_Hau),
	MAKECATGROUP(Pc),
	MAKECATGROUP(Pd),
	MAKECATGROUP(Pe),
	MAKECATGROUP(Pf),
	MAKEGROUP16(Phags_Pa),
	MAKEGROUP32(Phoenician),
	MAKECATGROUP(Pi),
	MAKECATGROUP(Po),
	//MAKECATGROUP(ps),
	MAKECATGROUP(Ps),
	MAKEGROUP32(Psalter_Pahlavi),
	MAKEGROUP16(Rejang),
	MAKEGROUP16(Runic),
	MAKEGROUP(S),
	MAKEGROUP16(Samaritan),
	MAKEGROUP16(Saurashtra),
	MAKECATGROUP(Sc),
	MAKEGROUP32(Sharada),
	MAKEGROUP32(Shavian),
	MAKEGROUP32(Siddham),
	MAKEGROUP32(SignWriting),
	MAKEGROUP(Sinhala),
	MAKECATGROUP(Sk),
	MAKECATGROUP(Sm),
	MAKECATGROUP(So),
	MAKEGROUP32(Sora_Sompeng),
	MAKEGROUP32(Soyombo),
	MAKEGROUP16(Sundanese),
	MAKEGROUP16(Syloti_Nagri),
	MAKEGROUP16(Syriac),
	MAKEGROUP16(Tagalog),
	MAKEGROUP16(Tagbanwa),
	MAKEGROUP16(Tai_Le),
	MAKEGROUP16(Tai_Tham),
	MAKEGROUP16(Tai_Viet),
	MAKEGROUP32(Takri),
	MAKEGROUP16(Tamil),
	MAKEGROUP32(Tangut),
	MAKEGROUP16(Telugu),
	MAKEGROUP16(Thaana),
	MAKEGROUP16(Thai),
	MAKEGROUP16(Tibetan),
	MAKEGROUP16(Tifinagh),
	MAKEGROUP32(Tirhuta),
	MAKEGROUP32(Ugaritic),
	MAKEGROUP16(Vai),
	MAKEGROUP32(Warang_Citi),
	MAKEGROUP16(Yi),
	MAKEGROUP16(Z),
	MAKEGROUP32(Zanabazar_Square),
	MAKECATGROUP(Zl),
	MAKECATGROUP(Zp),
	MAKECATGROUP(Zs),

//	{"Any",		any16, any32},
};

template<Category C> constexpr CategoryDef<C>::operator Group() const	{ return {r16, r32}; }//make_range_n(r16, num_elements(r16)), make_range_n(r32, num_elements(r32))}; }

const Group unicode_categories[] = {
	CategoryDef<Lu>(),
	CategoryDef<Ll>(),
	CategoryDef<Lt>(),
	CategoryDef<Mn>(),
	CategoryDef<Mc>(),
	CategoryDef<Me>(),
	CategoryDef<Nd>(),
	CategoryDef<Nl>(),
	CategoryDef<No>(),
	CategoryDef<Zs>(),
	CategoryDef<Zl>(),
	CategoryDef<Zp>(),
	CategoryDef<Cc>(),
	CategoryDef<Cf>(),
	CategoryDef<Cs>(),
	CategoryDef<Co>(),
	CategoryDef<Cn>(),
	CategoryDef<Lm>(),
	CategoryDef<Lo>(),
	CategoryDef<Pc>(),
	CategoryDef<Pd>(),
	CategoryDef<Ps>(),
	CategoryDef<Pe>(),
	CategoryDef<Pi>(),
	CategoryDef<Pf>(),
	CategoryDef<Po>(),
	CategoryDef<Sm>(),
	CategoryDef<Sc>(),
	CategoryDef<Sk>(),
	CategoryDef<So>(),
};

//struct UBlock {
//	interval<char32>	r32;
//	const char			*name;
//	bool operator<(uint32 b) const { return r32 < b; }
//};

const pair<interval<char32>, const char*> unicode_blocks[] = {
	{{0x0000, 0x007F}, "BasicLatin"},							{{0x0080, 0x00FF}, "Latin-1Supplement"},						{{0x0100, 0x017F}, "LatinExtended-A"},						{{0x0180, 0x024F}, "LatinExtended-B"},
	{{0x0250, 0x02AF}, "IPAExtensions"},						{{0x02B0, 0x02FF}, "SpacingModifierLetters"},					{{0x0300, 0x036F}, "CombiningDiacriticalMarks"},			{{0x0370, 0x03FF}, "GreekandCoptic"},
	{{0x0400, 0x04FF}, "Cyrillic"},								{{0x0500, 0x052F}, "CyrillicSupplement"},						{{0x0530, 0x058F}, "Armenian"},								{{0x0590, 0x05FF}, "Hebrew"},
	{{0x0600, 0x06FF}, "Arabic"},								{{0x0700, 0x074F}, "Syriac"},									{{0x0750, 0x077F}, "ArabicSupplement"},						{{0x0780, 0x07BF}, "Thaana"},
	{{0x07C0, 0x07FF}, "NKo"},									{{0x0800, 0x083F}, "Samaritan"},								{{0x0840, 0x085F}, "Mandaic"},								{{0x0860, 0x086F}, "SyriacSupplement"},
	{{0x08A0, 0x08FF}, "ArabicExtended-A"},						{{0x0900, 0x097F}, "Devanagari"},								{{0x0980, 0x09FF}, "Bengali"},								{{0x0A00, 0x0A7F}, "Gurmukhi"},
	{{0x0A80, 0x0AFF}, "Gujarati"},								{{0x0B00, 0x0B7F}, "Oriya"},									{{0x0B80, 0x0BFF}, "Tamil"},								{{0x0C00, 0x0C7F}, "Telugu"},
	{{0x0C80, 0x0CFF}, "Kannada"},								{{0x0D00, 0x0D7F}, "Malayalam"},								{{0x0D80, 0x0DFF}, "Sinhala"},								{{0x0E00, 0x0E7F}, "Thai"},
	{{0x0E80, 0x0EFF}, "Lao"},									{{0x0F00, 0x0FFF}, "Tibetan"},									{{0x1000, 0x109F}, "Myanmar"},								{{0x10A0, 0x10FF}, "Georgian"},
	{{0x1100, 0x11FF}, "HangulJamo"},							{{0x1200, 0x137F}, "Ethiopic"},									{{0x1380, 0x139F}, "EthiopicSupplement"},					{{0x13A0, 0x13FF}, "Cherokee"},
	{{0x1400, 0x167F}, "UnifiedCanadianAboriginalSyllabics"},	{{0x1680, 0x169F}, "Ogham"},									{{0x16A0, 0x16FF}, "Runic"},								{{0x1700, 0x171F}, "Tagalog"},
	{{0x1720, 0x173F}, "Hanunoo"},								{{0x1740, 0x175F}, "Buhid"},									{{0x1760, 0x177F}, "Tagbanwa"},								{{0x1780, 0x17FF}, "Khmer"},
	{{0x1800, 0x18AF}, "Mongolian"},							{{0x18B0, 0x18FF}, "UnifiedCanadianAboriginalSyllabicsExtended"},{{0x1900, 0x194F}, "Limbu"},								{{0x1950, 0x197F}, "TaiLe"},
	{{0x1980, 0x19DF}, "NewTaiLue"},							{{0x19E0, 0x19FF}, "KhmerSymbols"},								{{0x1A00, 0x1A1F}, "Buginese"},								{{0x1A20, 0x1AAF}, "TaiTham"},
	{{0x1AB0, 0x1AFF}, "CombiningDiacriticalMarksExtended"},	{{0x1B00, 0x1B7F}, "Balinese"},									{{0x1B80, 0x1BBF}, "Sundanese"},							{{0x1BC0, 0x1BFF}, "Batak"},
	{{0x1C00, 0x1C4F}, "Lepcha"},								{{0x1C50, 0x1C7F}, "OlChiki"},									{{0x1C80, 0x1C8F}, "CyrillicExtended-C"},					{{0x1C90, 0x1CBF}, "GeorgianExtended"},
	{{0x1CC0, 0x1CCF}, "SundaneseSupplement"},					{{0x1CD0, 0x1CFF}, "VedicExtensions"},							{{0x1D00, 0x1D7F}, "PhoneticExtensions"},					{{0x1D80, 0x1DBF}, "PhoneticExtensionsSupplement"},
	{{0x1DC0, 0x1DFF}, "CombiningDiacriticalMarksSupplement"},	{{0x1E00, 0x1EFF}, "LatinExtendedAdditional"},					{{0x1F00, 0x1FFF}, "GreekExtended"},						{{0x2000, 0x206F}, "GeneralPunctuation"},
	{{0x2070, 0x209F}, "SuperscriptsandSubscripts"},			{{0x20A0, 0x20CF}, "CurrencySymbols"},							{{0x20D0, 0x20FF}, "CombiningDiacriticalMarksforSymbols"},	{{0x2100, 0x214F}, "LetterlikeSymbols"},
	{{0x2150, 0x218F}, "NumberForms"},							{{0x2190, 0x21FF}, "Arrows"},									{{0x2200, 0x22FF}, "MathematicalOperators"},				{{0x2300, 0x23FF}, "MiscellaneousTechnical"},
	{{0x2400, 0x243F}, "ControlPictures"},						{{0x2440, 0x245F}, "OpticalCharacterRecognition"},				{{0x2460, 0x24FF}, "EnclosedAlphanumerics"},				{{0x2500, 0x257F}, "BoxDrawing"},
	{{0x2580, 0x259F}, "BlockElements"},						{{0x25A0, 0x25FF}, "GeometricShapes"},							{{0x2600, 0x26FF}, "MiscellaneousSymbols"},					{{0x2700, 0x27BF}, "Dingbats"},
	{{0x27C0, 0x27EF}, "MiscellaneousMathematicalSymbols-A"},	{{0x27F0, 0x27FF}, "SupplementalArrows-A"},						{{0x2800, 0x28FF}, "BraillePatterns"},						{{0x2900, 0x297F}, "SupplementalArrows-B"},
	{{0x2980, 0x29FF}, "MiscellaneousMathematicalSymbols-B"},	{{0x2A00, 0x2AFF}, "SupplementalMathematicalOperators"},		{{0x2B00, 0x2BFF}, "MiscellaneousSymbolsandArrows"},		{{0x2C00, 0x2C5F}, "Glagolitic"},
	{{0x2C60, 0x2C7F}, "LatinExtended-C"},						{{0x2C80, 0x2CFF}, "Coptic"},									{{0x2D00, 0x2D2F}, "GeorgianSupplement"},					{{0x2D30, 0x2D7F}, "Tifinagh"},
	{{0x2D80, 0x2DDF}, "EthiopicExtended"},						{{0x2DE0, 0x2DFF}, "CyrillicExtended-A"},						{{0x2E00, 0x2E7F}, "SupplementalPunctuation"},				{{0x2E80, 0x2EFF}, "CJKRadicalsSupplement"},
	{{0x2F00, 0x2FDF}, "KangxiRadicals"},						{{0x2FF0, 0x2FFF}, "IdeographicDescriptionCharacters"},			{{0x3000, 0x303F}, "CJKSymbolsandPunctuation"},				{{0x3040, 0x309F}, "Hiragana"},
	{{0x30A0, 0x30FF}, "Katakana"},								{{0x3100, 0x312F}, "Bopomofo"},									{{0x3130, 0x318F}, "HangulCompatibilityJamo"},				{{0x3190, 0x319F}, "Kanbun"},
	{{0x31A0, 0x31BF}, "BopomofoExtended"},						{{0x31C0, 0x31EF}, "CJKStrokes"},								{{0x31F0, 0x31FF}, "KatakanaPhoneticExtensions"},			{{0x3200, 0x32FF}, "EnclosedCJKLettersandMonths"},
	{{0x3300, 0x33FF}, "CJKCompatibility"},						{{0x3400, 0x4DBF}, "CJKUnifiedIdeographsExtensionA"},			{{0x4DC0, 0x4DFF}, "YijingHexagramSymbols"},				{{0x4E00, 0x9FFF}, "CJKUnifiedIdeographs"},
	{{0xA000, 0xA48F}, "YiSyllables"},							{{0xA490, 0xA4CF}, "YiRadicals"},								{{0xA4D0, 0xA4FF}, "Lisu"},									{{0xA500, 0xA63F}, "Vai"},
	{{0xA640, 0xA69F}, "CyrillicExtended-B"},					{{0xA6A0, 0xA6FF}, "Bamum"},									{{0xA700, 0xA71F}, "ModifierToneLetters"},					{{0xA720, 0xA7FF}, "LatinExtended-D"},
	{{0xA800, 0xA82F}, "SylotiNagri"},							{{0xA830, 0xA83F}, "CommonIndicNumberForms"},					{{0xA840, 0xA87F}, "Phags-pa"},								{{0xA880, 0xA8DF}, "Saurashtra"},
	{{0xA8E0, 0xA8FF}, "DevanagariExtended"},					{{0xA900, 0xA92F}, "KayahLi"},									{{0xA930, 0xA95F}, "Rejang"},								{{0xA960, 0xA97F}, "HangulJamoExtended-A"},
	{{0xA980, 0xA9DF}, "Javanese"},								{{0xA9E0, 0xA9FF}, "MyanmarExtended-B"},						{{0xAA00, 0xAA5F}, "Cham"},									{{0xAA60, 0xAA7F}, "MyanmarExtended-A"},
	{{0xAA80, 0xAADF}, "TaiViet"},								{{0xAAE0, 0xAAFF}, "MeeteiMayekExtensions"},					{{0xAB00, 0xAB2F}, "EthiopicExtended-A"},					{{0xAB30, 0xAB6F}, "LatinExtended-E"},
	{{0xAB70, 0xABBF}, "CherokeeSupplement"},					{{0xABC0, 0xABFF}, "MeeteiMayek"},								{{0xAC00, 0xD7AF}, "HangulSyllables"},						{{0xD7B0, 0xD7FF}, "HangulJamoExtended-B"},
	{{0xD800, 0xDB7F}, "HighSurrogates"},						{{0xDB80, 0xDBFF}, "HighPrivateUseSurrogates"},					{{0xDC00, 0xDFFF}, "LowSurrogates"},						{{0xE000, 0xF8FF}, "PrivateUseArea"},
	{{0xF900, 0xFAFF}, "CJKCompatibilityIdeographs"},			{{0xFB00, 0xFB4F}, "AlphabeticPresentationForms"},				{{0xFB50, 0xFDFF}, "ArabicPresentationForms-A"},			{{0xFE00, 0xFE0F}, "VariationSelectors"},
	{{0xFE10, 0xFE1F}, "VerticalForms"},						{{0xFE20, 0xFE2F}, "CombiningHalfMarks"},						{{0xFE30, 0xFE4F}, "CJKCompatibilityForms"},				{{0xFE50, 0xFE6F}, "SmallFormVariants"},
	{{0xFE70, 0xFEFF}, "ArabicPresentationForms-B"},			{{0xFF00, 0xFFEF}, "HalfwidthandFullwidthForms"},				{{0xFFF0, 0xFFFF}, "Specials"},								{{0x10000, 0x1007F},"LinearBSyllabary"},
	{{0x10080, 0x100FF},"LinearBIdeograms"},					{{0x10100, 0x1013F},"AegeanNumbers"},							{{0x10140, 0x1018F},"AncientGreekNumbers"},					{{0x10190, 0x101CF},"AncientSymbols"},
	{{0x101D0, 0x101FF},"PhaistosDisc"},						{{0x10280, 0x1029F},"Lycian"},									{{0x102A0, 0x102DF},"Carian"},								{{0x102E0, 0x102FF},"CopticEpactNumbers"},
	{{0x10300, 0x1032F},"OldItalic"},							{{0x10330, 0x1034F},"Gothic"},									{{0x10350, 0x1037F},"OldPermic"},							{{0x10380, 0x1039F},"Ugaritic"},
	{{0x103A0, 0x103DF},"OldPersian"},							{{0x10400, 0x1044F},"Deseret"},									{{0x10450, 0x1047F},"Shavian"},								{{0x10480, 0x104AF},"Osmanya"},
	{{0x104B0, 0x104FF},"Osage"},								{{0x10500, 0x1052F},"Elbasan"},									{{0x10530, 0x1056F},"CaucasianAlbanian"},					{{0x10600, 0x1077F},"LinearA"},
	{{0x10800, 0x1083F},"CypriotSyllabary"},					{{0x10840, 0x1085F},"ImperialAramaic"},							{{0x10860, 0x1087F},"Palmyrene"},							{{0x10880, 0x108AF},"Nabataean"},
	{{0x108E0, 0x108FF},"Hatran"},								{{0x10900, 0x1091F},"Phoenician"},								{{0x10920, 0x1093F},"Lydian"},								{{0x10980, 0x1099F},"MeroiticHieroglyphs"},
	{{0x109A0, 0x109FF},"MeroiticCursive"},						{{0x10A00, 0x10A5F},"Kharoshthi"},								{{0x10A60, 0x10A7F},"OldSouthArabian"},						{{0x10A80, 0x10A9F},"OldNorthArabian"},
	{{0x10AC0, 0x10AFF},"Manichaean"},							{{0x10B00, 0x10B3F},"Avestan"},									{{0x10B40, 0x10B5F},"InscriptionalParthian"},				{{0x10B60, 0x10B7F},"InscriptionalPahlavi"},
	{{0x10B80, 0x10BAF},"PsalterPahlavi"},						{{0x10C00, 0x10C4F},"OldTurkic"},								{{0x10C80, 0x10CFF},"OldHungarian"},						{{0x10D00, 0x10D3F},"HanifiRohingya"},
	{{0x10E60, 0x10E7F},"RumiNumeralSymbols"},					{{0x10F00, 0x10F2F},"OldSogdian"},								{{0x10F30, 0x10F6F},"Sogdian"},								{{0x10FE0, 0x10FFF},"Elymaic"},
	{{0x11000, 0x1107F},"Brahmi"},								{{0x11080, 0x110CF},"Kaithi"},									{{0x110D0, 0x110FF},"SoraSompeng"},							{{0x11100, 0x1114F},"Chakma"},
	{{0x11150, 0x1117F},"Mahajani"},							{{0x11180, 0x111DF},"Sharada"},									{{0x111E0, 0x111FF},"SinhalaArchaicNumbers"},				{{0x11200, 0x1124F},"Khojki"},
	{{0x11280, 0x112AF},"Multani"},								{{0x112B0, 0x112FF},"Khudawadi"},								{{0x11300, 0x1137F},"Grantha"},								{{0x11400, 0x1147F},"Newa"},
	{{0x11480, 0x114DF},"Tirhuta"},								{{0x11580, 0x115FF},"Siddham"},									{{0x11600, 0x1165F},"Modi"},								{{0x11660, 0x1167F},"MongolianSupplement"},
	{{0x11680, 0x116CF},"Takri"},								{{0x11700, 0x1173F},"Ahom"},									{{0x11800, 0x1184F},"Dogra"},								{{0x118A0, 0x118FF},"WarangCiti"},
	{{0x119A0, 0x119FF},"Nandinagari"},							{{0x11A00, 0x11A4F},"ZanabazarSquare"},							{{0x11A50, 0x11AAF},"Soyombo"},								{{0x11AC0, 0x11AFF},"PauCinHau"},
	{{0x11C00, 0x11C6F},"Bhaiksuki"},							{{0x11C70, 0x11CBF},"Marchen"},									{{0x11D00, 0x11D5F},"MasaramGondi"},						{{0x11D60, 0x11DAF},"GunjalaGondi"},
	{{0x11EE0, 0x11EFF},"Makasar"},								{{0x11FC0, 0x11FFF},"TamilSupplement"},							{{0x12000, 0x123FF},"Cuneiform"},							{{0x12400, 0x1247F},"CuneiformNumbersandPunctuation"},
	{{0x12480, 0x1254F},"EarlyDynasticCuneiform"},				{{0x13000, 0x1342F},"EgyptianHieroglyphs"},						{{0x13430, 0x1343F},"EgyptianHieroglyphFormatControls"},	{{0x14400, 0x1467F},"AnatolianHieroglyphs"},
	{{0x16800, 0x16A3F},"BamumSupplement"},						{{0x16A40, 0x16A6F},"Mro"},										{{0x16AD0, 0x16AFF},"BassaVah"},							{{0x16B00, 0x16B8F},"PahawhHmong"},
	{{0x16E40, 0x16E9F},"Medefaidrin"},							{{0x16F00, 0x16F9F},"Miao"},									{{0x16FE0, 0x16FFF},"IdeographicSymbolsandPunctuation"},	{{0x17000, 0x187FF},"Tangut"},
	{{0x18800, 0x18AFF},"TangutComponents"},					{{0x1B000, 0x1B0FF},"KanaSupplement"},							{{0x1B100, 0x1B12F},"KanaExtended-A"},						{{0x1B130, 0x1B16F},"SmallKanaExtension"},
	{{0x1B170, 0x1B2FF},"Nushu"},								{{0x1BC00, 0x1BC9F},"Duployan"},								{{0x1BCA0, 0x1BCAF},"ShorthandFormatControls"},				{{0x1D000, 0x1D0FF},"ByzantineMusicalSymbols"},
	{{0x1D100, 0x1D1FF},"MusicalSymbols"},						{{0x1D200, 0x1D24F},"AncientGreekMusicalNotation"},				{{0x1D2E0, 0x1D2FF},"MayanNumerals"},						{{0x1D300, 0x1D35F},"TaiXuanJingSymbols"},
	{{0x1D360, 0x1D37F},"CountingRodNumerals"},					{{0x1D400, 0x1D7FF},"MathematicalAlphanumericSymbols"},			{{0x1D800, 0x1DAAF},"SuttonSignWriting"},					{{0x1E000, 0x1E02F},"GlagoliticSupplement"},
	{{0x1E100, 0x1E14F},"NyiakengPuachueHmong"},				{{0x1E2C0, 0x1E2FF},"Wancho"},									{{0x1E800, 0x1E8DF},"MendeKikakui"},						{{0x1E900, 0x1E95F},"Adlam"},
	{{0x1EC70, 0x1ECBF},"IndicSiyaqNumbers"},					{{0x1ED00, 0x1ED4F},"OttomanSiyaqNumbers"},						{{0x1EE00, 0x1EEFF},"ArabicMathematicalAlphabeticSymbols"},	{{0x1F000, 0x1F02F},"MahjongTiles"},
	{{0x1F030, 0x1F09F},"DominoTiles"},							{{0x1F0A0, 0x1F0FF},"PlayingCards"},							{{0x1F100, 0x1F1FF},"EnclosedAlphanumericSupplement"},		{{0x1F200, 0x1F2FF},"EnclosedIdeographicSupplement"},
	{{0x1F300, 0x1F5FF},"MiscellaneousSymbolsandPictographs"},	{{0x1F600, 0x1F64F},"Emoticons"},								{{0x1F650, 0x1F67F},"OrnamentalDingbats"},					{{0x1F680, 0x1F6FF},"TransportandMapSymbols"},
	{{0x1F700, 0x1F77F},"AlchemicalSymbols"},					{{0x1F780, 0x1F7FF},"GeometricShapesExtended"},					{{0x1F800, 0x1F8FF},"SupplementalArrows-C"},				{{0x1F900, 0x1F9FF},"SupplementalSymbolsandPictographs"},
	{{0x1FA00, 0x1FA6F},"ChessSymbols"},						{{0x1FA70, 0x1FAFF},"SymbolsandPictographsExtended-A"},			{{0x20000, 0x2A6DF},"CJKUnifiedIdeographsExtensionB"},		{{0x2A700, 0x2B73F},"CJKUnifiedIdeographsExtensionC"},
	{{0x2B740, 0x2B81F},"CJKUnifiedIdeographsExtensionD"},		{{0x2B820, 0x2CEAF},"CJKUnifiedIdeographsExtensionE"},			{{0x2CEB0, 0x2EBEF},"CJKUnifiedIdeographsExtensionF"},		{{0x2F800, 0x2FA1F},"CJKCompatibilityIdeographsSupplement"},
	{{0xE0000, 0xE007F},"Tags"},								{{0xE0100, 0xE01EF},"VariationSelectorsSupplement"},			{{0xF0000, 0xFFFFF},"SupplementaryPrivateUseArea-A"},		{{0x100000, 0x10FFFF},"SupplementaryPrivateUseArea-B"},
};

const Group* LookupGroup(const count_string& name) {
	for (auto &i : unicode_groups)
		if (name == i.a)
			return &i.b;
	return NULL;
}

const interval<char32>* LookupBlock(const count_string& name) {
	for (auto &i : unicode_blocks)
		if (name == i.b)
			return &i.a;
	return NULL;
}

const char *GetBlock(const char32 code) {
	auto	i = lower_boundc(unicode_blocks, code, [](const pair<interval<char32>, const char*> &a, const char32 b) {return a.a < b; });
	return i->b;
}

bool in_category(const Group &cat, char32 code) {
	if (code < 0x10000) {
		auto	i = lower_boundc(cat.r16, uint16(code));
		return i != cat.r16.end() && code >= i->a;
	} else {
		auto	i = lower_boundc(cat.r32, code);
		return i != cat.r32.end() && code >= i->a;
	}
}

bool is_category(Category cat, char32 code) {
	return in_category(unicode_categories[cat], code);
}

Category category(int code) {
	for (auto &i : unicode_categories) {
		if (in_category(i, code))
			return (Category)(&i - unicode_categories);
	}
	return Cn;
}

const CaseFold* LookupCaseFold(const CaseFold *f, size_t n, char32 r) {
	const CaseFold* ef = f + n;

	while (n > 0) {
		size_t m = n / 2;
		if (f[m].lo <= r && r <= f[m].hi)
			return &f[m];

		if (r < f[m].lo) {
			n = m;
		} else {
			f += m + 1;
			n -= m + 1;
		}
	}

	return f < ef ? f : NULL;
}

const CaseFold* LookupCaseFold(char32 r) {
	return LookupCaseFold(unicode_casefold, num_elements(unicode_casefold), r);
}

char32 ApplyFold(const CaseFold *f, char32 r) {
	switch (f->delta) {
		default:
			return r + f->delta;

		case EvenOddSkip:  // even <-> odd but only applies to every other
			if ((r - f->lo) % 2)
				return r;
			//FALLTHROUGH_INTENDED;
		case EvenOdd:  // even <-> odd
			if (r % 2 == 0)
				return r + 1;
			return r - 1;

		case OddEvenSkip:  // odd <-> even but only applies to every other
			if ((r - f->lo) % 2)
				return r;
			//FALLTHROUGH_INTENDED;
		case OddEven:  // odd <-> even
			if (r % 2 == 1)
				return r + 1;
			return r - 1;
	}
}

// Returns the next char32 in r's folding cycle (see unicode_casefold.h).
// Examples:
//   CycleFoldRune('A') = 'a'
//   CycleFoldRune('a') = 'A'
//
//   CycleFoldRune('K') = 'k'
//   CycleFoldRune('k') = 0x212A (Kelvin)
//   CycleFoldRune(0x212A) = 'K'
//
//   CycleFoldRune('?') = '?'
char32 CycleFoldRune(char32 r) {
	const CaseFold* f = LookupCaseFold(r);
	if (f == NULL || r < f->lo)
		return r;
	return ApplyFold(f, r);
}

} } // namespace iso::unicode
