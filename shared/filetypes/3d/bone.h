#ifndef BONE_H
#define BONE_H

#include "iso/iso.h"
#include "base/vector.h"

namespace iso {

enum BONE {
	BONE_ROOT,
	BONE_HIPS,
	BONE_SPINE1,
	BONE_SPINE2,
	BONE_SPINE3,
	BONE_NECK1,
	BONE_NECK2,
	BONE_HEAD,

	BONE_LEFT_CLAVICLE,
	BONE_LEFT_SHOULDER,
	BONE_LEFT_ARM,
	BONE_LEFT_FOREARM,
	BONE_LEFT_HAND,
	BONE_LEFT_THUMB1,
	BONE_LEFT_THUMB2,
	BONE_LEFT_THUMB3,
	BONE_LEFT_INDEX1,
	BONE_LEFT_INDEX2,
	BONE_LEFT_INDEX3,
	BONE_LEFT_MIDDLE1,
	BONE_LEFT_MIDDLE2,
	BONE_LEFT_MIDDLE3,
	BONE_LEFT_RING1,
	BONE_LEFT_RING2,
	BONE_LEFT_RING3,
	BONE_LEFT_PINKY1,
	BONE_LEFT_PINKY2,
	BONE_LEFT_PINKY3,

	BONE_RIGHT_CLAVICLE,
	BONE_RIGHT_SHOULDER,
	BONE_RIGHT_ARM,
	BONE_RIGHT_FOREARM,
	BONE_RIGHT_HAND,
	BONE_RIGHT_THUMB1,
	BONE_RIGHT_THUMB2,
	BONE_RIGHT_THUMB3,
	BONE_RIGHT_INDEX1,
	BONE_RIGHT_INDEX2,
	BONE_RIGHT_INDEX3,
	BONE_RIGHT_MIDDLE1,
	BONE_RIGHT_MIDDLE2,
	BONE_RIGHT_MIDDLE3,
	BONE_RIGHT_RING1,
	BONE_RIGHT_RING2,
	BONE_RIGHT_RING3,
	BONE_RIGHT_PINKY1,
	BONE_RIGHT_PINKY2,
	BONE_RIGHT_PINKY3,

	BONE_LEFT_THIGH,
	BONE_LEFT_LEG,
	BONE_LEFT_FOOT,
	BONE_LEFT_TOES,

	BONE_RIGHT_THIGH,
	BONE_RIGHT_LEG,
	BONE_RIGHT_FOOT,
	BONE_RIGHT_TOES,

	BONE_ROLL	= 0x100,
};

struct BoneMapping {
	const char *name;
	BONE		bone;
};

inline BONE operator|(BONE a, BONE b) { return BONE(int(a) | int(b)); }
BONE		GetParent(BONE a);
const char*	GetName(BONE a);
float4		GetRotCone(BONE a);
BONE		LookupBone(const BoneMapping *m, size_t num, const char *name);
template<int N> BONE LookupBone(const BoneMapping (&m)[N], const char *name) {
	return LookupBone(m, N, name);
}
} // namespace iso

#endif // BONE_H
